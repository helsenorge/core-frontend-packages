// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HOC utils Gitt at en komponent wrappes i render-to-body HOC Når printable er false Så renderes det en portal 1`] = `
<RenderToBody>
  <Portal
    containerInfo={
      <div>
        <section>
          My first section rendered to document
        </section>
      </div>
    }
  >
    <section>
      My first section rendered to document
    </section>
  </Portal>
</RenderToBody>
`;

exports[`HOC utils Gitt at en komponent wrappes i render-to-body HOC Når printable er true Så renderes det en portal med body tag 1`] = `
<RenderToBody
  printable={true}
>
  <Portal
    containerInfo={
      <body>
        <div>
          <section>
            My first section rendered to document
          </section>
        </div>
        <section>
          My second section rendered to body (printable)
        </section>
      </body>
    }
  >
    <section>
      My second section rendered to body (printable)
    </section>
  </Portal>
</RenderToBody>
`;

exports[`HOC utils Gitt at en komponent wrappes i track-route-change HOC Når den instansieres Så kaller den adobe-analytics og rendres riktig 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <withRouter(TrackRouteChange)>
      <TrackRouteChange
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        location={
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          }
        }
        match={
          Object {
            "isExact": true,
            "params": Object {},
            "path": "/",
            "url": "/",
          }
        }
      >
        <section>
          Track routing section
        </section>
      </TrackRouteChange>
    </withRouter(TrackRouteChange)>
  </Router>
</BrowserRouter>
`;

/* tslint:disable */
// prettier-ignore
// ReSharper disable RedundantEmptyConstructor
// ReSharper disable InconsistentNaming
/*
 * This file is automatically generated by Visual Studio, all manual changes to this file will be lost.
 *
 * To regenerate this file make sure you
 *		1: Build the JSGenerator.CommandLine project
 *		2: Either run the project directly in Visual Studio, or execute HN.JsGenerator.CommandLine.exe in the folder <Repo>\SharePoint\Source\JsGenerator.CommandLine\bin\Debug
 *
 * This file is generated from classes implementing the IClientOperation interface in the Entities project or inherits from the ClientOperationResponse
 * class in the BusinessLogic project. All properties with the DataMember attribute in these or base classes is included.Properties which could not be properly
 * resolved defaults to TypeScripts 'any' type.
 *
 * Properties of IList, IEnumerable or ICollection(etc) is excluded(use a actual implementation to generate the type), some types are automatically
 * excluded since they should not be available in JavaScript(e.g.UserContext).
 */
import {
    AppointmentStatus,
    AppointmentType,
    AvailableAppointmentsStatus,
    AvtaleKategori,
    AvtaleStatus,
    Berikingssamtykke,
    BrukType,
    CareLevel,
    CertificateStatus,
    ChangeAppointmentSpecialistStatus,
    ConsultationStatus,
    ConversationCounterpartyType,
    ConversationInitiatedBy,
    ConversationItemType,
    ConversationStatus,
    ConversationType,
    CoordinatorType,
    CustodyType,
    DeltMedRolle,
    DocumentHovedType,
    DokumentStatus,
    DokumentStatusType,
    DokumentType,
    DonorkortOperation,
    ExecuteCommandFor,
    ExternalAccessTokenRecipients,
    FinnesHelsedata,
    FullmaktType,
    GetFullmaktType,
    GetPersonForFullmaktStatus,
    GjoremalStatus,
    HealthRegion,
    HelsekontaktType,
    HelseRegion,
    HelseTjenesterType,
    HendelseType,
    HttpStatusCode,
    IdType,
    InnsynssperreType,
    KjernejournalReservationType,
    KontaktAvType,
    KontaktKategori,
    KontaktPunktTjenesteType,
    KontaktType,
    LastMessageSentBy,
    LegemiddelKilde,
    MerchandiseType,
    MessageSentStatus,
    MessageType,
    MotpartType,
    NotificationLevel,
    OppforingsType,
    OppgaveStatus,
    OppgaveType,
    PatientStatus,
    PrescriptionDeliveryMethod,
    PrescriptionState,
    PrescriptionStatus,
    PrescriptionType,
    ProfilePropertyCategoryType,
    ReferralType,
    RegisterDialogType,
    RejectedStatus,
    RepresentasjonforholdType,
    ReservasjonStatusType,
    ReservasjonType,
    RoleToPatientType,
    SamtykkeLevel,
    SamtykkeStatusType,
    SamtykkeType,
    StatusKodeType,
    SystemType,
    TilgangsbegrensningDataType,
    TimeavtaleType,
    TjenesteOmradeType,
    TjenesteStatusType,
    TjenesteTilgangStatus,
    TokenScope,
    TransportFormat,
    VarselmenyType,
    Visningstandard,
    XDSDokumentKategori,
} from './minhelseenums';
export type ISO8601 = string;
export interface KjBaseObject {
  Versjon: number;
  HarVersjonsnummer: boolean;
  Id: string;
  Kode: string;
}
export interface HealthContactResponse {
  FirstName: string;
  MiddleName: string;
  LastName: string;
  Role: string;
  OrganizationName: string;
  DepartmentName: string;
  Phone: string;
  ValidFrom: ISO8601;
  ValidTo: ISO8601;
  Counterparty: SenderOrReceiver;
  OtherInfo: Person;
  RoleToPatient: RoleToPatientType;
  NewCoordinatorMessageHash: string;
  NewHelsefagligKontaktMessageHash: string;
}
export interface ReferralResponse {
  ReferralType: ReferralType;
  Id: string;
  DialogType: ConversationType;
  SortDate: string;
  OrganizationId: string;
  OrganizationName: string;
  OrganizationCity: string;
  DepartmentName: string;
  StatusInfoText: string;
  StatusText: string;
  StatusKode: string;
  StatusValue: string;
  Phone: string;
  ReferredDate: string;
  EvaluationDateText: string;
  AuthorName: string;
  AuthorOrganizationName: string;
  AuthorAddress: string;
  AuthorPhone: string;
  AuthorCity: string;
  AssignedSectionName: string;
  Active: boolean;
  HealthRegion: HealthRegion;
  DisplayAppointments: boolean;
}
export interface RestDocumentListItem {
  Id: string;
  Title: string;
  Link: string;
  Icon: string;
  CreatedDate: string;
  CreatedTime: string;
  CreatedYear: string;
  SortableCreatedDate: string;
  ModifiedDate: string;
  ModifiedYear: string;
  SortableModifiedDate: string;
  FileSize: number;
  ValidFileSize: boolean;
  Author: string;
  Supported: boolean;
  Status: string;
  HashValue: string;
  Item: DocumentListItem;
}
export interface Virksomhet {
  VirksomhetId: number;
  Navn: string;
  Tilbudsliste: Array<Tilbud>;
  MedlemData: Medlem;
}
export interface TilgjengeligBehandlerResponse {
  Behandler: FunksjonellMotpart;
  Counterparty: SenderOrReceiver;
  NewConsultationHash: string;
  NewPrescriptionHash: string;
  NewJournalAccessHash: string;
}
export interface TilgjengeligBehandlerResponse {
  Behandler: FunksjonellMotpart;
  Counterparty: SenderOrReceiver;
  ChangeAppointmentHash: string;
  NewOnlineAppointmentHash: string;
  NewOfflineAppointmentHash: string;
  NewConsultationHash: string;
  NewPrescriptionHash: string;
  NewUnstructuredPrescriptionHash: string;
  NewPrimarhelsetjenesteAppointmentHash: string;
}
export interface EkspanderbarMelding {
  Topptekst: string;
  Liste: Array<String>;
  Bunntekst: string;
}
export interface TimeavtaleResponse {
  AppointmentType: TimeavtaleType;
  StartTime: ISO8601;
  EndTime: ISO8601;
  GetAppointmentConversationHash: string;
  HealthRegion: HealthRegion;
  VideoUrl: string;
}
export interface OppgaveContactInformation {
  Name: string;
  PhoneNumber: string;
  Email: string;
  Organization: string;
  SensitiveInformation: boolean;
  Role: string;
  DescriptionAboutPointOfContact: string;
}
export interface UploadedDocument {
  DokumentId: string;
  GetArchiveDocumentHash: string;
  DeleteArchiveDocumentHash: string;
}
export interface TextMessage {
  Title: string;
  Body: string;
}
export interface Tilgangsbegrensning {
  PersonvernInnstilling: PersonvernInnstilling;
  TilgangsbegrensningData: Array<TilgangsbegrensningData>;
}
export interface EgenandelerResponse {
  RepresentertBrukerFnr: string;
  BorgerInfo: Borger;
  ArInfo: Array<Aar>;
  InfoMeldingtTittel: string;
  InfoMeldingTekst: string;
  ShowEgenandelstak2FromDate: string;
}
export interface Vaksinasjonskort {
  Utstedelsesdato: ISO8601;
  Vaksinand: Vaksinand;
  Sykdommer: Array<VaksineSykdom>;
}
export interface KommunalTjeneste {
  AnsvarligNavn: string;
  LeverandorNavn: string;
  LeverandorTelefon: string;
  LeverandorUrl: string;
  StartDato: ISO8601;
  SluttDato: ISO8601;
  TjenesteId: string;
  TjenesteNavn: string;
  TjenesteTypeNavn: string;
  TjenesteTypeId: number;
  TjenesteType: KontaktPunktTjenesteType;
  HelsekontaktType: HelsekontaktType;
  NewContactMessageHash: string;
  CancelAppointmentHash: string;
  Counterparty: Person;
  TechnicalCounterparty: SenderOrReceiver;
}
export interface SenderOrReceiverEntity {
  Person: Person;
  Visningsnavn: string;
}
export interface XDSDokument {
  Id: string;
  HomeId: string;
  RepoId: string;
  Tittel: string;
  OpprettetDato: string;
  SorterbarOpprettetDato: string;
  Forfatter: Array<String>;
  Organisasjon: string;
  Avdeling: string;
  MimeType: string;
  DokumentType: string;
  KategoriId: XDSDokumentKategori;
  Kategori: string;
  FilStorrelse: number;
  GyldigFilStorrelse: boolean;
  ErStottet: boolean;
  ErBegrenset: boolean;
  KonfidensialitetsKode: string;
}
export interface DifiContactInformation {
  PersonalNumber: string;
  Mobile: string;
  EmailAddress: string;
  Reserved: boolean;
}
export interface Innsynssperre {
  SperringId: string;
  KonsumentKode: string;
  SperreForAlle: boolean;
  SperreHeleKjernejournal: boolean;
  InnsynssperreModuler: Array<InnsynssperreModul>;
  OpprettetDato: ISO8601;
  EndretDato: ISO8601;
  HprNummer: string;
}
export interface Innsyn {
  InnsynObjects: Array<InnsynObject>;
  Vedlegg: Array<Vedlegg>;
  StottedeRapporter: Array<StottetRapport>;
}
export interface RegisterInnsynSvarMetadata {
  DokumentGuid: any;
  DokumentNavn: string;
  DokumentType: DokumentType;
  DokumentTypeNavn: string;
  DokumentPreviewHash: string;
  FilType: string;
  DialogType: RegisterDialogType;
  VisningStandardId: Visningstandard;
  MottatDato: ISO8601;
  DokumentStatus: DokumentStatus;
  KonteksttypeId: any;
  Konteksttype: string;
  Emneord: string;
}
export interface LoggHendelse {
  AntallHendelser: number;
  Dato: ISO8601;
  Navn: string;
  Hendelse: string;
  Bakgrunn: string;
  Fornavn: string;
  Etternavn: string;
  HendelseLoggType: number;
  Representasjonforhold: RepresentasjonforholdType;
  HendelseTekst: string;
  TillatEgendefinertLogging: boolean;
}
export interface RegisterDialog {
  Navn: string;
  DialogTypes: Array<RegisterDialogData>;
}
export interface Register {
  Navn: string;
  InnsynDato: ISO8601;
}
export interface TimeSlot {
  Id: string;
  Start: ISO8601;
  End: ISO8601;
  ResourceShortName: string;
  ChangeAppointmentSpecialistHash: string;
}
export interface RegisterDokument {
  DokumentId: number;
  DokumentGuid: any;
  DokumentNavn: string;
  Visningstandard: Visningstandard;
  InnholdType: any;
  DokumentHash: string;
  DokumentPreviewHash: string;
}
export interface ArchiveItemResponse {
  Id: string;
  Description: string;
  Author: string;
  Status: string;
  ContentType: string;
  DokumentFilReferanse: string;
  Updated: ISO8601;
  DeleteMessageAttachmentHash: string;
  GetDokumentFilReferanseHash: string;
  GetArchiveDocumentHash: string;
  DeleteArchiveDocumentHash: string;
  GetArchiveDocumentPreviewHash: string;
}
export interface DokumentListElement {
  Name: string;
  DocumentStatus: DokumentStatusType;
  DocumentId: number;
  HovedtypeId: DocumentHovedType;
  InnholdtypeId: any;
  Innholdtype: string;
  KonteksttypeId: any;
  Konteksttype: string;
  Emneord: string;
  HarGjengivelse: boolean;
  ErDelt: boolean;
  Created: ISO8601;
  LastChange: ISO8601;
  Format: string;
  Gjengivelser: Array<DokumentGjengivelseElement>;
  MimeType: string;
  GetArchiveDocumentHash: string;
  DeleteArchiveDocumentHash: string;
  GetArchiveDocumentPreviewHash: string;
}
export interface DokumentDelingBruk {
  DokumentBrukId: number;
  DokumentId: number;
  Rolle: string;
  Fornavn: string;
  Etternavn: string;
  BrukDato: ISO8601;
  BrukTypeId: BrukType;
  EnhetNavn: string;
}
export interface ConversationItemResponse {
  Type: ConversationType;
  ItemType: ConversationItemType;
  MessageId: string;
  ConversationId: string;
  ParentId: string;
  SentDate: ISO8601;
  ReceivedDate: ISO8601;
  ModifiedDate: ISO8601;
  Subject: string;
  Content: string;
  ContentForDraft: string;
  Sender: SenderOrReceiverEntity;
  SentStatus: MessageSentStatus;
  RejectedStatus: RejectedStatus;
  IsRead: boolean;
  Outgoing: boolean;
  PatientRelation: string;
  Attachments: Array<ArchiveItemResponse>;
  DeleteMessagesHash: string;
  SendMessageHash: string;
  UpdateReadStatusHash: string;
  EkskluderFraNormalvisning: boolean;
  MotpartTypeId: number;
}
export interface ConversationResponse {
  Type: ConversationType;
  Id: string;
  Subject: string;
  ItemCount: number;
  UnreadCount: number;
  Counterparty: SenderOrReceiverEntity;
  CounterpartyType: MotpartType;
  TechnicalCounterparty: SenderOrReceiver;
  LastUpdatedDate: ISO8601;
  DraftWaiting: boolean;
  NumberOfDrafts: number;
  NumberOfAttachments: number;
  Person: Person;
  Status: ConversationStatus;
  InitiatedBy: ConversationInitiatedBy;
  GetConversationHash: string;
  GetConversationXmlHash: string;
  LastMessageFrom: LastMessageSentBy;
  HasReceivedMessage: boolean;
  Feilet: boolean;
}
export interface Tile {
  Title: string;
  Description: string;
  Link: string;
  TjenesteType: number;
  Banner: string;
  Columns: number;
  Image: string;
  Internal: boolean;
  RequiresLogin: boolean;
  ShowUnreadMessageCount: boolean;
  NeedsConfirmation: boolean;
  WelcomeTile: boolean;
  Children: any;
}
export interface VarselmenyElement {
  VarselmenyId: number;
  Emne: string;
  OpprettetDato: ISO8601;
  EndretDato: ISO8601;
  OpprettetAvId: number;
  PaaminnelseFrist: ISO8601;
  ArkivId: number;
  ElementId: string;
  Tekst: string;
  Lest: boolean;
  ElementTypeId: any;
  Vist: boolean;
  EndretAvId: number;
  VarselmenyTypeId: VarselmenyType;
  TjenesteId: number;
}
export interface HelsePerson {
  Id: string;
  Fornavn: string;
  Etternavn: string;
  Alder: string;
  Kjonn: string;
}
export interface IdentityInfo {
  Id: string;
  IdentityTypeId: IdType;
}
export interface RecurType {
  Frequency: any;
  Interval: string;
  ByDay: string;
  Until: ISO8601;
  Count: number;
}
export interface FeilKildeListe {
  LegensSpesialiteter: TextMessage;
  Utekontor: TextMessage;
  Gruppepraksis: TextMessage;
  Fellesliste: TextMessage;
  PrimarHelseTeam: TextMessage;
}
export interface FastlegeAvtale {
  Id: string;
  AntallPlasser: number;
  LedigePlasser: number;
  Fastlege: Fastlege;
  Delelistelege: HelsePerson;
  Legekontor: any;
  Avtaledato: ISO8601;
  Fradato: ISO8601;
  ErSio: boolean;
  Vikarer: Array<VikarFastlege>;
  Valgbar: boolean;
  Fellesliste: boolean;
  Oppstartsarsak: string;
  VentelisteTilgjengelig: boolean;
  AntallPaVenteliste: number;
  PrimarHelseTeamId: number;
}
export interface HistoriskAvtale {
  FraDato: ISO8601;
  TilDato: ISO8601;
  Legenavn: string;
  Legekontor: string;
  Adresse: string;
  Telefon: string;
  Opphorsarsak: string;
  Oppstartsarsak: string;
}
export interface FremtidigAvtale {
  Id: string;
  FraDato: ISO8601;
  RegistrertDato: ISO8601;
  Legenavn: string;
  Legekontor: string;
  Adresse: string;
  Postnr: string;
  Poststed: string;
  Telefonnummer: string;
}
export interface FastlegeAvtaleContainer {
  FastlegeAvtale: FastlegeAvtale;
  Melding: Melding;
  FremtidigMelding: Melding;
}
export interface Melding {
  Title: string;
  Type: MessageType;
  Beskjed: string;
}
export interface Utekontor {
  Navn: string;
  Adresse: string;
  Postnummer: string;
  Poststed: string;
}
export interface InnbyggersBarn {
  Id: number;
  Fornavn: string;
  Mellomnavn: string;
  Etternavn: string;
  GjenstBytte: number;
  Legenavn: string;
  Legekontor: string;
  AdresseLegekontor: string;
  Venteliste: Venteliste;
  ErReservert: boolean;
  ErUtmeldt: boolean;
  AvtaleId: string;
  FremtidigAvtaleId: string;
}
export interface TilgangsbegrensningData {
  PersonvernInnstillingId: number;
  TilgangsbegrensningDataId: number;
  Nummer: string;
  Navn: string;
  DataType: TilgangsbegrensningDataType;
  EndringMetadata: any;
}
export interface Borger {
  Adresse: Address;
  HarSperretAdresse: boolean;
  Kontonummer: string;
  HarKontonummer: boolean;
  ErReservert: boolean;
  DatoReservert: ISO8601;
  ErMinstepensjonist: boolean;
  ErUtvandret: boolean;
  ErUnder16: boolean;
}
export interface Aar {
  Ar: number;
  FrikortInfoTak1: any;
  FrikortInfoTak2: any;
  MinsteUtbetalingsBelop: number;
  Utbetalingshistorikk: any;
  UtbetalingsbelopUnderGrensen: boolean;
}
export interface Vaksinand {
  Fodselsnummer: string;
  Fodselsdato: ISO8601;
  Fornavn: string;
  Etternavn: string;
}
export interface VaksineSykdom {
  NavnNorsk: string;
  NavnEngelsk: string;
  VaksinasjonMotSykdom: any;
}
export interface CDADocument {
  MeldingId: number;
  MessageId: string;
  Name: string;
  DocumentStatus: string;
  DocumentId: string;
  JournalId: string;
  SetId: string;
  Created: ISO8601;
  LastChange: ISO8601;
  Authors: string;
  Custodian: string;
  CustodianType: string;
  MimeType: string;
}
export interface PersonvernInnstilling {
  PersonvernInnstillingId: number;
  PersonvernInnstillingDefinisjonId: number;
  PersonvernInnstillingDefinisjonGuid: any;
  InnbyggerProfilId: number;
  OpprettetEndringMetadata: any;
  StatusKode: any;
  Versjonsnummer: number;
  EndringMetadata: any;
  TidsbegrensetTil: ISO8601;
}
export interface Venteliste {
  AvtaleId: number;
  Legenavn: string;
  AntallPaVenteliste: number;
  KoPlassNummer: number;
  FraDato: ISO8601;
}
export interface Medlem {
  StartDato: ISO8601;
  SluttDato: ISO8601;
}
export interface Tilbud {
  HelsetilbudId: number;
  Navn: string;
  Telefon: string;
  Gateadresse: string;
  Postnummer: string;
  Poststed: string;
  NewContactMessageHash: string;
  NewConsultationMessageHash: string;
  NewPrescriptionMessageHash: string;
  NewJournalAccessHash: string;
  NewAppointmentHash: string;
  Counterparty: SenderOrReceiver;
  HelsetilbudEksternId: any;
  NewPrimarhelsetjenesteAppointmentHash: string;
  TransportFormat: TransportFormat;
}
export interface FullmaktEgenskaper {
  Analog: boolean;
  FullmaktType: FullmaktType;
}
export interface ForeldreansvarEgenskaper {
  DagligOmsorg: boolean;
}
export interface Tjeneste {
  TjenesteId: number;
  ErFlis: boolean;
  TjenesteStatus: TjenesteStatusType;
  FullmaktAksessTyper: any;
}
export interface Requisitioner {
  FirstName: string;
  LastName: string;
  RequisitionerId: string;
  Organisation: string;
}
export interface Delivery {
  Id: string;
  DisplayName: string;
  ItemNumber: string;
  ProductCode: string;
  Dosage: string;
  Dispenser: string;
  IsTerminated: boolean;
  DispensedPackage: string;
  DispensedQuantity: string;
  DeliveryDate: ISO8601;
  DeliveryDateString: string;
  ActiveIngredient: string;
  UseGuide: string;
  Interventions: any;
  HasIntervention: boolean;
  ByttereservasjonKunde: boolean;
  NavnFormStyrke: string;
}
export interface M25HovedFelter {
  VisningsNavn: string;
  Atc: string;
  Bruk: string;
  Bruksomrade: string;
  DosVeiledEnkel: string;
}
export interface LegemiddelReaksjon {
  Beskrivelse: string;
  Legemiddel: string;
  DatoOppdatert: ISO8601;
  DatoOppdatertString: string;
  Kilde: string;
  Kommentar: string;
  Avkreftet: boolean;
  Hjelpestoffreaksjon: boolean;
}
export interface HealthPersonnelType {
  UserId: string;
  Name: string;
  BusinessName: string;
  BusinessOrgNumber: string;
  Role: string;
  Kode: string;
  HPRNumber: string;
}
export interface Sykdom {
  Navn: string;
  Kode: string;
  Id: number;
}
export interface InnsynObject {
  Title: string;
  Type: string;
  Content: string;
  Attributes: any;
  Children: Array<InnsynObject>;
}
export interface Vedlegg {
  DokumentId: string;
  DokumentNavn: string;
  DokumentHash: string;
}
export interface StottetRapport {}
export interface RegisterDialogData {
  DialogType: RegisterDialogType;
  ControlHash: string;
  ForespurtTid: ISO8601;
  Blokkert: boolean;
  Feilet: boolean;
  ErInnsyn: boolean;
}
export interface DokumentGjengivelseElement {
  GjengivelseId: number;
  Format: string;
}
export interface DocumentListItem {
  Id: string;
  Title: string;
  Created: ISO8601;
  Author: string;
  OrganisationName: string;
  DepartmentName: string;
  AuthorRole: string;
  MimeType: string;
  DocumentType: string;
  VolvenId: string;
  VolvenSubId: string;
  VolvenName: string;
  FileSize: number;
  ValidFileSize: boolean;
  IsSupported: boolean;
  IsRestricted: boolean;
  ConfidentialityCode: string;
}
export interface Donorkort {
  Donor: boolean;
  Navn: string;
  Parorende: Array<Kontakt>;
}
export interface Sykdomskategori {
  Kategori: string;
  Sykdommer: Array<Sykdom>;
}
export interface TilgjengeligBehandlerPrimarhelsetjenesteResponse {
  Behandler: FunksjonellMotpart;
  Counterparty: SenderOrReceiver;
  ChangeAppointmentHash: string;
  NewOnlineAppointmentHash: string;
  NewOfflineAppointmentHash: string;
  NewConsultationHash: string;
  NewPrescriptionHash: string;
  NewUnstructuredPrescriptionHash: string;
  NewPrimarhelsetjenesteAppointmentHash: string;
}
export interface FilteredContact {
  KontaktId: string;
  KontaktAvType: KontaktAvType;
  RolleNavn: string;
  Navn: string;
  Count: number;
}
export interface Reservasjon {
  ReservasjonType: ReservasjonType;
  PersonvernInnstillingDefinisjonGuid: any;
  Opprettet: ISO8601;
  ReservertAvFornavn: string;
  ReservertAvEtternavn: string;
  RepresentasjonforholdType: RepresentasjonforholdType;
  StatusType: ReservasjonStatusType;
  StatusKodeType: StatusKodeType;
  ErAktiv: boolean;
}
export interface Samtykke {
  Type: SamtykkeType;
  PersonvernInnstillingDefinisjonGuid: any;
  Opprettet: ISO8601;
  StatusType: SamtykkeStatusType;
  SamtykketAvProfilGuid: any;
  SamtykketAvFornavn: string;
  SamtykketAvEtternavn: string;
  RepresentasjonforholdType: RepresentasjonforholdType;
  StatusKodeType: StatusKodeType;
  ErAktiv: boolean;
}
export interface TjenesteTilgang {
  Tjeneste: number;
  Status: TjenesteTilgangStatus;
}
export interface XObject {}
export interface ResponseBase {
  FloResponse: number;
  HnResponse: number;
}
export interface ConversationItem {
  ConversationType: ConversationType;
  ConversationItemType: ConversationItemType;
  ItemId: number;
  ItemGuid: string;
  ConversationGuid: string;
  ParentGuid: string;
  SentDate: ISO8601;
  ReceivedDate: ISO8601;
  ModifiedDate: ISO8601;
  Subject: string;
  Content: string;
  Sender: SenderOrReceiverEntity;
  SentStatus: MessageSentStatus;
  RejectedStatus: RejectedStatus;
  IsRead: boolean;
  Outgoing: boolean;
  AuthorName: string;
  PatientRelation: string;
  Attachments: any;
  EkskluderFraNormalvisning: boolean;
  MotpartTypeId: number;
}
export interface CriticalInformationVerifiedNone {
  LastUpdated: ISO8601;
  LastUpdatedBy: string;
  LastUpdatedByBusiness: string;
}
export interface Address {
  PostalCode: string;
  StreetAddressLine1: string;
  StreetAddressLine2: string;
  StreetAddressLine3: string;
  City: string;
  PhoneNumber: string;
  Postbox: string;
  Country: string;
  Municipality: string;
  MunicipalityNumber: string;
  PostalAddress: string;
  CoAddress: string;
  DateAddressFrom: ISO8601;
}
export interface PersonvernInnstilling {}
export interface MinHelseCommandResult {
  StatusCode: HttpStatusCode;
  InformationMessage: TextMessage;
  WarningMessage: TextMessage;
  ErrorMessage: TextMessage;
  RedirectUrl: string;
}
export interface XCalProperties {
  Start: ISO8601;
  End: ISO8601;
  Id: string;
  RelatedTo: string;
  Contact: string;
  ProdId: string;
  ReferralId: string;
  ExpectedDuration: string;
  Status: string;
  Location: string;
  Summary: string;
  Description: string;
  Categories: any;
  Organizer: string;
  Attendees: Array<String>;
  RecurType: RecurType;
  ExcludingDates: any;
  AvailableAt: ISO8601;
}
export interface MessageAttachment {
  Name: string;
  MimeType: string;
}
export interface CitizenProfileType {
  Id: number;
  ProfilGuid: any;
  PersonNumber: string;
  Channels: any;
  NotificationLevel: NotificationLevel;
  ProfileIdVarslingsListe: any;
  Properties: any;
  DeadDate: ISO8601;
  Opprettet: ISO8601;
  SisteEndret: ISO8601;
}
export interface Skjema {
  Id: string;
  ContentType: string;
  Content: string;
  QuestionnairePath: string;
}
export interface ReseptHeader {
  ReseptId: string;
}
export interface FunksjonellMotpart {
  FirstName: string;
  LastName: string;
  MiddleName: string;
  ClientId: string;
  SourceSystemId: string;
  UniqueId: IdentityInfo;
  RoleToPatient: RoleToPatientType;
  Comment: string;
  Title: string;
}
export interface Person {
  ProfilId: number;
  ProfilGuid: any;
  Id: string;
  FirstName: string;
  MiddleName: string;
  LastName: string;
  Title: string;
  IsMockName: boolean;
  HprId: string;
  OtherId: string;
  HerId: number;
  FullName: string;
}
export interface AndreTjenester {
  Counterparty: SenderOrReceiver;
  Sakstype: string;
  ControlHash: string;
}
export interface RapporterFeil {
  Feil: boolean;
  Feilbeskrivelse: string;
}
export interface Besokshistorikk {
  Arstall: string;
  AntallBesok: number;
  Fagenhet: string;
  Institusjon: string;
  RapporterFeilIBesokshistorikkHash: string;
  ReshId: string;
  EpisodeIdList: string;
  Organisasjonsnummer: string;
  RhfOrganisasjonsnummer: string;
  HfOrganisasjonsnummer: string;
}
export interface InnsynssperreModul {
  ModulKode: string;
  ModulNavn: string;
  Aktiv: boolean;
}
export interface History {
  Name: string;
  Year: string;
  Specification: string;
  Code: string;
  Id: string;
  VersionNumber: number;
  IsVersionNumberSpecified: boolean;
}
export interface Soknad {
  Version: string;
}
export interface BilagTilGodkjenning {}
export interface PersonvernSignature {
  Value: string;
  MessageId: string;
  HerId: number;
  ExpirationTicks: number;
}
export interface Representasjonsvarsel {
  Fornavn: string;
  Etternavn: string;
  Fnr: string;
  ProfileId: number;
  HarRegisterinnsyn: boolean;
  Varsling: boolean;
  Representasjonforhold: RepresentasjonforholdType;
}
export interface String {}
export interface ValueType {}
export interface SenderOrReceiverOrganization {
  Name: string;
  HerId: number;
  OrgId: string;
  ReshId: string;
}
export interface AktivFullmakt {
  GetFullmaktType: GetFullmaktType;
  Navn: string;
}
export interface BasisProfil {
  ProfilId: number;
  Navn: string;
}
export interface typeReseptDok {
  Varegruppekode: any;
  Antall: number;
  Merknad: string;
  RefHjemmel: any;
}
export interface FailedDeletedBilag {}
export interface ReseptLoggOverBruk {
  NavnUtleverer: string;
  Tid: ISO8601;
}
export interface Fullmaktshaver {
  Fnr: string;
  Fornavn: string;
  Etternavn: string;
}
export interface Fullmakt {
  FullmaktId: number;
  Opprettet: ISO8601;
  GyldigTom: ISO8601;
  Slettet: ISO8601;
  Fnr: string;
  Fornavn: string;
  Etternavn: string;
  Type: FullmaktType;
  GetFullmaktType: GetFullmaktType;
  TjenesteOmrader: Array<TjenesteOmrade>;
  UpdateFullmaktHash: string;
  DeleteFullmaktHash: string;
  Deprecated: boolean;
  FullmaktsgiverProfilId: number;
  FullmaktshaverProfilId: number;
  RepresentasjonTypeId: number;
  Navn: string;
}
export interface HelsetjenesterLogg {
  Opprettet: string;
  Navn: string;
  Tjeneste: string;
  Hendelse: string;
  Bakgrunn: string;
}
export interface Klage {}
export interface ServiceResponse {}
export interface MetasoknaderResponse {}
export interface Familiemedlem {
  Fnr: string;
  Fornavn: string;
  Etternavn: string;
}
export interface PersonvelgerElement {
  ProfilGuid: any;
  Fnr: string;
  Fornavn: string;
  Etternavn: string;
  Type: RepresentasjonforholdType;
  FullmaktEgenskaper: FullmaktEgenskaper;
  ForeldreansvarEgenskaper: ForeldreansvarEgenskaper;
  Selected: boolean;
  Color: number;
  UnreadMessageCount: number;
  HarSamtykket: boolean;
}
export interface TjenesteOmrade {
  TjenesteOmradeType: TjenesteOmradeType;
  Navn: string;
  ErAktiv: boolean;
  Tjenester: Array<Tjeneste>;
  Tjenestenavn: string;
  Deprecated: boolean;
  InternalName: string;
}
export interface BarnMedForeldreSamtykkeInfo {
  ProfilGuid: any;
  Fornavn: string;
  Etternavn: string;
  HarForeldeSamtykke: boolean;
  HarEndreRettighet: boolean;
  SamtykketAvFornavn: string;
  SamtykketAvEtternavn: string;
  Opprettet: ISO8601;
}
export interface AdresseValue {}
export interface KJActivityLogType {
  AccessedDate: ISO8601;
  AccessedBy: HealthPersonnelType;
  Action: string;
  Basis: string;
  InformationObjectAccessed: string;
}
export interface LegemidlerIBruk {
  SisteOppdatert: ISO8601;
  SisteOppdatertString: string;
  LegeFornavn: string;
  LegeEtternavn: string;
  Organisasjon: string;
  Kommentar: string;
  Legemiddelreaksjoner: Array<LegemiddelReaksjon>;
}
export interface MittLegemiddel {
  ReseptId: string;
  VisningsNavn: string;
  Expires: ISO8601;
  Sluttidspunkt: ISO8601;
  SluttidspunktString: string;
  ExpireDateString: string;
  Forskrivningsdato: ISO8601;
  TidligsteUtlevering: ISO8601;
  TidligsteUtleveringDateString: string;
  BytteresRekvirent: boolean;
  ForskrivningsdatoString: string;
  Reiterasjon: number;
  Varenr: string;
  RefHjemmel: string;
  Pakning: string;
  Antall: string;
  ForskrivendeLege: Requisitioner;
  DosVeiledEnkel: string;
  Status: PrescriptionState;
  IsPaper: boolean;
  IsLocked: boolean;
  ErLib: boolean;
  ErSeponert: boolean;
  ErBlaaResept: boolean;
  RefNr: string;
  Utleveringer: Array<Delivery>;
  InngarMultidose: boolean;
  MedEndring: boolean;
  LegemiddelType: PrescriptionType;
  VareType: MerchandiseType;
  Bruksveiledning: string;
  Atc: string;
  AtcKode: string;
  Bruksomrade: string;
  Bruk: string;
  ErVirkestoff: boolean;
  LatestDelivery: Delivery;
  StateTitle: string;
  StateInfo: string;
  SubLegemidler: any;
  Kilde: LegemiddelKilde;
  StatusSlv: PrescriptionState;
  M25HovedFelter: M25HovedFelter;
}
export interface Register {
  RegisterId: string;
  Navn: string;
  Forkortelse: string;
  BeskrivelseFormaal: string;
  BeskrivelseOppfoering: string;
  Databehandlingsansvarlig: string;
  InformasjonLenkeTekst: string;
  InformasjonLenke: string;
  InnsynsrettLenkeTekst: string;
  InnsynsrettLenke: string;
  Sekvensnummer: number;
  RettsligGrunnlag: string;
  SekvensnrInnenforParagraf: number;
  HasDialog: boolean;
  DialogSubTjeneste: number;
  HerId: number;
  Innsynslenke: string;
  OppforingsType: OppforingsType;
  FinnesHelsedata: FinnesHelsedata;
  OrganisasjonsNummer: number;
  SistOppdatert: ISO8601;
  SistOppdatertString: string;
}
export interface Barn {}
export interface BaseResept extends ReseptHeader {
  Forskrivningsdato: ISO8601;
  Utloper: ISO8601;
  Vergeinnsynsreservasjon: boolean;
  RefNr: string;
  ReseptDok: typeReseptDok;
  OppdatertFest: ISO8601;
}
export interface AppointmentConversationResponse extends ConversationResponse {
  GetAppointmentConversationHash: string;
  Sakstype: string;
}
export interface GeneralPractitionerTimeavtaleResponse extends TimeavtaleResponse {
  AppointmentStatus: AppointmentStatus;
  OfficeLocation: string;
  OfficeName: string;
  Behandler: Person;
  Subject: string;
  ConversationId: string;
  AvtaleType: any;
  OppmoteSted: string;
}
export interface ContactConversationItemResponse extends ConversationItemResponse {
  CertificateStatus: CertificateStatus;
  NewContactHash: string;
}
export interface SpecialistTimeavtaleResponse extends TimeavtaleResponse {
  AppointmentId: string;
  DepartmentName: string;
  OrganisationName: string;
  PerformerName: string;
  StreetAddressLine: string;
  PostalCode: string;
  City: string;
  OrganisationCity: string;
  Telephone: string;
  Location: string;
  CareLevel: CareLevel;
  ReferralId: string;
  Counterparty: SenderOrReceiver;
  Calendar: XCalProperties;
  AfterDeadline: boolean;
  HasExtendedFunctionality: boolean;
  DownloadCalendarToken: string;
  AdditionalEncounterInfoHash: string;
  CancelEncounterHash: string;
  ConfirmEncounterHash: string;
  ChangeEncounterHash: string;
  IsAppointmentOnlineBookableHash: string;
  AppointmentLetterHash: string;
}
export interface Kontakt extends KjBaseObject {
  Type: KontaktType;
  Spesifiser: string;
  Navn: string;
  AdresseLinje1: string;
  AdresseLinje2: string;
  AdresseLinje3: string;
  Telefonnummer: string;
  Beskrivelse: string;
  Donorkontakt: boolean;
  EndretDato: string;
}
export interface PrescriptionConversationItemResponse extends ConversationItemResponse {
  Prescriptions: Array<String>;
  UnstructuredPrescriptions: Array<String>;
  PrescriptionStatus: PrescriptionStatus;
  NewPrescriptionHash: string;
  NewStructuredPrescriptionHash: string;
}
export interface SpecialistAppointmentConversationItemResponse extends ConversationItemResponse {
  AttachmentIsDraft: boolean;
  AttachmentReplaced: boolean;
  AuthorName: string;
  TechnicalCounterparty: SenderOrReceiver;
  Calendar: XCalProperties;
  AdditionalEncounterInfoHash: string;
  CancelEncounterHash: string;
  ConfirmEncounterHash: string;
  ChangeEncounterHash: string;
  NotificationMessage: string;
}
export interface HelseregisterConversationResponse extends ConversationResponse {
  NewHelseregisterMessageHash: string;
}
export interface PrescriptionConversationResponse extends ConversationResponse {
  NewPrescriptionHash: string;
  NewStructuredPrescriptionHash: string;
}
export interface ContactConversationResponse extends ConversationResponse {
  NewContactHash: string;
  Sakstype: string;
  OfficeName: string;
}
export interface ConsultationConversationResponse extends ConversationResponse {
  NewConsultationHash: string;
}
export interface BytteFastlegeConversationResponse extends ConversationResponse {}
export interface OppgaveConversationResponse extends ConversationResponse {}
export interface PrimarhelsetjenesteAppointmentConversationItemResponse extends ConversationItemResponse {
  AppointmentStatus: AppointmentStatus;
  AppointmentDate: string;
  Start: ISO8601;
  End: ISO8601;
}
export interface SamtykkeforesporselConversationItemResponse extends ConversationItemResponse {
  DefinisjonId: any;
  Svarfrist: ISO8601;
  Paaminnelse: ISO8601;
  GjoremalStatus: GjoremalStatus;
  OppgaveNavn: string;
  SamtykkePart: string;
  SamtykkeNavn: string;
  GjoremalBeskrivelse: string;
}
export interface MeldingsformidlingConversationItemResponse extends ConversationItemResponse {
  DelInnholdMed: RoleToPatientType;
}
export interface OppgaveConversationItemResponse extends ConversationItemResponse {
  OppgaveType: OppgaveType;
  OppgaveStatus: OppgaveStatus;
  Berikingssamtykke: Berikingssamtykke;
  Metadata: any;
  ContactInformation: OppgaveContactInformation;
  ForkastOppgaveHash: string;
  GjenopprettOppgaveHash: string;
  ToggleReminderForOppgaveHash: string;
  SamtykkForBerikingAvSkjemaHash: string;
}
export interface BytteFastlegeConversationItemResponse extends ConversationItemResponse {}
export interface HelsefagligKontaktConversationItemResponse extends ConversationItemResponse {
  NewHelsefagligKontaktMessageHash: string;
  Counterparty: Person;
  TechnicalCounterparty: SenderOrReceiver;
}
export interface CoordinatorConversationItemResponse extends ConversationItemResponse {
  NewCoordinatorMessageHash: string;
  CoordinatorType: CoordinatorType;
  Counterparty: Person;
  TechnicalCounterparty: SenderOrReceiver;
}
export interface HelseregisterConversationItemResponse extends ConversationItemResponse {
  NewHelseregisterMessageHash: string;
}
export interface GeneralPractitionerAppointmentConversationItemResponse extends ConversationItemResponse {
  AppointmentStatus: AppointmentStatus;
  AppointmentDate: string;
  Start: ISO8601;
  End: ISO8601;
  NewOnlineAppointmentHash: string;
  NewOfflineAppointmentHash: string;
  IsOnline: boolean;
}
export interface ConsultationConversationItemResponse extends ConversationItemResponse {
  ConsultationStatus: ConsultationStatus;
  NewConsultationHash: string;
}
export interface HendelseConversationItem extends ConversationItem {
  HendelseType: HendelseType;
  IsExpired: boolean;
  UpdateReadStatusHash: string;
  GetHendelseHash: string;
  StartTidspunkt: ISO8601;
  AvtaleStatus: AvtaleStatus;
  IsFirstAppointment: boolean;
}
export interface PrimarHelsePerson extends HelsePerson {
  Rolle: string;
}
export interface Innbygger extends ResponseBase {
  Id: number;
  Fornavn: string;
  Etternavn: string;
  GjenstBytte: number;
  ErReservert: boolean;
  ErUtmeldt: boolean;
  ErSio: boolean;
  PaVenteliste: boolean;
}
export interface InnbyggersBarnContainer extends ResponseBase {
  InnbyggersBarn: Array<InnbyggersBarn>;
}
export interface RemoveVentelisteResponse extends ResponseBase {
  FjernetFraVenteliste: boolean;
  Dato: ISO8601;
}
export interface ListeTilhorighetResponse extends ResponseBase {
  Fremtidig: FremtidigAvtale;
}
export interface AvtaleDetaljer extends ResponseBase {
  LegensSpesialiteter: Array<String>;
  Utekontor: Array<Utekontor>;
  Gruppepraksis: Array<HelsePersonSamisk>;
  Fellesliste: Array<HelsePersonSamisk>;
  PrimarHelseTeam: Array<PrimarHelsePerson>;
  FeilKildeListe: FeilKildeListe;
}
export interface SetVentelisteResponse extends ResponseBase {
  Venteliste: Venteliste;
}
export interface AvtaleSok extends ResponseBase {
  Resultater: any;
}
export interface PersonalInformation extends Person {
  DateOfBirth: ISO8601;
  Custody: CustodyType;
  Address: Address;
  Children: any;
  ChildrenFullName: any;
  Mother: PersonalInformation;
  Father: PersonalInformation;
  IsDead: boolean;
  HarSperretAdresse: boolean;
  HarUtenlandskAdresse: boolean;
  SvarFraNhn: boolean;
  IsUnderCustidy: boolean;
}
export interface UpdateVarseloppsettCommandResult extends MinHelseCommandResult {
  Representasjonsvarsler: Array<Representasjonsvarsel>;
}
export interface GetVarseloppsettCommandResult extends MinHelseCommandResult {
  VarselEpost: boolean;
  VarselSms: boolean;
  Epost: string;
  Telefonnummer: string;
  Representasjonsvarsler: Array<Representasjonsvarsel>;
  Varslingsniva: NotificationLevel;
}
export interface GeneriskPersonvernInnstilling extends PersonvernInnstilling {}
export interface XNode extends XObject {}
export interface SenderOrReceiverProfessional extends Person {
  Role: RoleToPatientType;
}
export interface PrimarhelsetjenesteTimeavtaleResponse extends TimeavtaleResponse {
  Subject: string;
  Duration: any;
  Status: AppointmentStatus;
  Location: string;
  Behandler: Person;
  Description: string;
  DownloadCalendarToken: string;
  AppointmentId: string;
  ServiceDescription: string;
  Organization: string;
  AvtaleType: any;
  Counterparty: SenderOrReceiver;
  CancelAppointmentHash: string;
  KalenderElementID: number;
  TimeadministrasjonsstotteHash: string;
}
export interface AvtaleTilhorighet extends ResponseBase {
  Navaerende: FastlegeAvtale;
  Historiske: Array<HistoriskAvtale>;
  Fremtidig: FremtidigAvtale;
}
export interface PortalInitialData extends ResponseBase {
  Fylker: any;
}
export interface CriticalInformationItem extends CriticalInformationVerifiedNone {
  Active: boolean;
  Title: string;
  Status: string;
  Description: string;
  DateDiscovered: ISO8601;
  AgeDiscovered: string;
  DiscoveredBy: string;
}
export interface KommuneTimeavtaleResponse extends TimeavtaleResponse {
  AppointmentId: string;
  AppointmentStatus: AppointmentStatus;
  Location: string;
  Subject: string;
  Description: string;
  AppointmentCategory: AvtaleKategori;
  RecurType: RecurType;
  OrganisationName: string;
  PerformerName: string;
  ExpectedDuration: string;
  DownloadCalendarToken: string;
  ExcludingDates: any;
  CalendarId: string;
  Calendar: XCalProperties;
  Sakstype: string;
  CancelAppointmentHash: string;
  Counterparty: SenderOrReceiver;
}
export interface NationalSpecialistTimeavtaleResponse extends TimeavtaleResponse {
  AppointmentId: string;
  AppointmentStatus: AppointmentStatus;
  Subject: string;
  Location: string;
  Counterparty: SenderOrReceiver;
  DepartmentName: string;
  OrganisationName: string;
  AppointmentVersionId: string;
  OnlineBookable: boolean;
  DialogueSupported: boolean;
  Telephone: string;
  HentDetaljer: boolean;
  DownloadCalendarToken: string;
  Hendelser: Array<HendelseConversationItem>;
  PerformerName: string;
  ChangeEncounterHash: string;
  Contact: string;
  ProdId: string;
  Oppmotetidspunkt: string;
}
export interface Int64 extends ValueType {}
export interface SenderOrReceiver extends SenderOrReceiverOrganization {
  OrganizationLevel2: SenderOrReceiverOrganization;
  Professional: SenderOrReceiverProfessional;
  HelsetilbudEksternId: any;
}
export interface GeneralPractitionerAddress extends Address {}
export interface HelsePersonSamisk extends HelsePerson {
  Samisk: boolean;
}
export interface CoordinatorConversationResponse extends ConversationResponse {
  NewCoordinatorMessageHash: string;
  CoordinatorType: CoordinatorType;
}
export interface Performer extends Person {
  BirthDate: ISO8601;
  Forskrivningsrett: boolean;
}
export interface GetKontaktInformationCommandResult extends MinHelseCommandResult {
  Fnr: string;
  Navn: string;
  Adresse: Address;
  Barn: any;
  Mor: string;
  Far: string;
  Mobilnummer: string;
  Epost: string;
  SvarFraDifi: boolean;
  SvarFraNhn: boolean;
}
export interface KommunikasjonsTyper extends KjBaseObject {
  SterktHoerselshemmet: boolean;
  Doev: boolean;
  SterktSynshemmet: boolean;
  Blind: boolean;
  Talevansker: boolean;
  Stum: boolean;
  KognitiveVansker: boolean;
  BrukerKontaktlinser: boolean;
  TrengerTolk: boolean;
  TrengerTolkTekst: string;
  Beskrivelse: string;
}
export interface VikarFastlege extends HelsePerson {
  TilDato: ISO8601;
  FraDato: ISO8601;
  Prosentandel: number;
  VikarFor: string;
}
export interface HelsefagligKontaktConversationResponse extends ConversationResponse {
  NewHelsefagligKontaktMessageHash: string;
}
export interface PrimarhelsetjenesteAppointmentConversationResponse extends AppointmentConversationResponse {
  StartTime: ISO8601;
  EndTime: ISO8601;
  AppointmentStatus: AppointmentStatus;
  AppointmentId: string;
}
export interface OngoingTreatment extends CriticalInformationItem {
  Subtitle: string;
  ValidTo: ISO8601;
  ValidFrom: ISO8601;
  ValidFromAge: string;
  ValidatedFromBy: string;
  SubcategoryCode: string;
}
export interface Fastlege extends HelsePersonSamisk {
  HprNummer: number;
  Stillingsprosent: string;
  Autorisert: string;
}
export interface MinHelseInitialData extends PortalInitialData {
  Innbygger: Innbygger;
  Tilhorighet: FastlegeAvtaleContainer;
  Meldinger: Array<Melding>;
  Venteliste: Venteliste;
}
export interface GeneralPractionerAppointmentConversationResponse extends AppointmentConversationResponse {
  StartTime: ISO8601;
  EndTime: ISO8601;
  AppointmentStatus: AppointmentStatus;
  Calendar: XCalProperties;
  OfficeName: string;
  OfficeAddress: string;
  LastParentId: string;
  DownloadCalendarToken: string;
  CancelAppointmentHash: string;
  ChangeAppointmentHash: string;
}
export interface Resept extends BaseResept {
  TidligsteUtlevering: ISO8601;
  UtskrevetSykehus: boolean;
  LastResept: boolean;
}
export interface CriticalMedicalCondition extends CriticalInformationItem {
  ReasonForSeverity: string;
  HelpText: string;
}
export interface Infection extends CriticalInformationItem {
  ValidTo: ISO8601;
}
export interface CriticalInformationCategorizedItem extends CriticalInformationItem {
  SubcategoryCode: string;
}
export interface XContainer extends XNode {}
export interface SpecialistAppointmentConversationResponse extends AppointmentConversationResponse {
  AppointmentTime: string;
  CareLevel: string;
  AppointmentId: string;
  IsConfirmed: boolean;
}
export interface AnestheticComplication extends CriticalInformationCategorizedItem {
  MaskVentilation: string;
  AnestheticProblemType: string;
}
export interface HypersensitivityReaction extends CriticalInformationCategorizedItem {
  IsInactiveIncredientReaction: boolean;
  Reaction: string;
  Severity: string;
}
export interface XElement extends XContainer {}
export interface DeviationFromGuidelines extends CriticalInformationCategorizedItem {
  ValidTo: ISO8601;
  Specification: string;
}
export interface OperationResponse extends Response {
  StatusCode: HttpStatusCode;
  InformationMessage: TextMessage;
  WarningMessage: TextMessage;
  ErrorMessage: TextMessage;
  RedirectUrl: string;
}
export interface ClientOperationResponse extends OperationResponse {}
export interface ClientErrorOperationResponse extends OperationResponse {}
export interface GenererMineRefleksjonerPdfOperationResponse extends ClientOperationResponse {
  FileName: string;
  ContentType: string;
  Content: string;
}
export interface GetFeatureTogglesOperationResult extends ClientOperationResponse {
  FeatureToggles: any;
}
export interface GetDifiContactInformationOperationResponse extends ClientOperationResponse {
  Information: DifiContactInformation;
}
export interface PersistentMessageOperationResponse extends ClientOperationResponse {
  Conversation: ConversationResponse;
  Items: Array<ConversationItemResponse>;
  MessageId: string;
  MessageSaved: boolean;
}
export interface SendMessageOperationResponse extends ClientOperationResponse {
  Conversation: ConversationResponse;
  Items: Array<ConversationItemResponse>;
}
export interface ChangeAppointmentSpecialistOperationResponse extends ClientOperationResponse {
  ChangeAppointmentStatus: ChangeAppointmentSpecialistStatus;
}
export interface GetSlotsOperationResponse extends ClientOperationResponse {
  TimeSlots: Array<TimeSlot>;
}
export interface IsAppointmentOnlineBookableOperationResponse extends ClientOperationResponse {
  AppointmentId: string;
  AppointmentVersionId: string;
  OnlineBookable: boolean;
  MustOccurBefore: string;
  GetSlotsHash: string;
}
export interface IsHelseNordPatientOperationResponse extends ClientOperationResponse {
  IsHelseNordPatient: boolean;
}
export interface GetXDSDokumentListeOperationResponse extends ClientOperationResponse {
  Dokumenter: Array<XDSDokument>;
  Antall: number;
  TotalAntall: number;
  MaksAntall: number;
  FraDato: ISO8601;
  TilDato: ISO8601;
  OverMaksAntall: boolean;
  Samtykket: boolean;
  Melding: EkspanderbarMelding;
}
export interface GetFeatureToggleOperationResult extends ClientOperationResponse {
  IsEnabled: boolean;
}
export interface GetXDSDokumentOperationResponse extends ClientOperationResponse {
  HomeCommunityId: string;
  RepositoryUniqueId: string;
  DocumentUniqueId: string;
  MimeType: string;
}
export interface GetPasientJournalRegionOperationResponse extends ClientOperationResponse {
  Region: HelseRegion;
}
export interface GetHealthContactsOperationResponse extends ClientOperationResponse {
  HealthContactsList: Array<HealthContactResponse>;
  ArchiveHealthContactsList: Array<HealthContactResponse>;
}
export interface GetReferralOperationResponse extends ClientOperationResponse {
  Referrals: Array<ReferralResponse>;
}
export interface GetJournalDocumentListOperationResponse extends ClientOperationResponse {
  Documents: Array<RestDocumentListItem>;
  TotalResultCount: number;
  StartIndex: number;
  Samtykket: boolean;
}
export interface GetTilgangsloggAnsattInnsynOperationResponse extends ClientOperationResponse {
  AnsattInnsynElementer: any;
  TotaltAntallAnsattInnsyn: number;
}
export interface IsHelseVestPatientOperationResponse extends ClientOperationResponse {
  IsHelseVestPatient: boolean;
}
export interface GetInnloggingsDialogInfoOperationResponse extends ClientOperationResponse {
  ShowDialog: boolean;
  BruksVilkarOpprettetDato: string;
  EpostAdresse: string;
  Mobil: string;
  ErInnloggetBruker: boolean;
  RepresentertBrukerFullNavn: string;
  VarselEpost: boolean;
  VarselSms: boolean;
  Representasjonsvarsler: Array<Representasjonsvarsel>;
  Varslingsniva: NotificationLevel;
}
export interface GetUnreadMessageCountOperationResponse extends ClientOperationResponse {
  MessageCount: number;
  HasUvistVarselmeny: boolean;
}
export interface GetTilgangsloggInnsynOperationResponse extends ClientOperationResponse {
  TilgangsloggInnsynElementer: any;
  TotaltAntallInnsyn: number;
  Melding: EkspanderbarMelding;
}
export interface GetSYSVAKLoggOverBrukOperationResponse extends ClientOperationResponse {
  Innsyn: Innsyn;
}
export interface SendRegisterInnsynForesporselOperationResponse extends ClientOperationResponse {}
export interface GetVarselmenyElementerOperationResponse extends ClientOperationResponse {
  VarselmenyElementer: Array<VarselmenyElement>;
}
export interface GetConversationsCountOperationResponse extends ClientOperationResponse {
  Count: number;
}
export interface GetHendelseOperationResponse extends ClientOperationResponse {
  Hendelse: HendelseConversationItem;
}
export interface GetHendelserOperationResponse extends ClientOperationResponse {
  Hendelser: any;
}
export interface GetDocumentListOperationResponse extends ClientOperationResponse {
  Documents: Array<ArchiveItemResponse>;
}
export interface GetTilesOperationResult extends ClientOperationResponse {
  Helsetjenester: Array<Tile>;
  Innsynstjenester: Array<Tile>;
  EksterneTjenester: Array<Tile>;
}
export interface GetDokumenterOperationResponse extends ClientOperationResponse {
  Dokumenter: Array<DokumentListElement>;
}
export interface SaveDocumentOperationResponse extends ClientOperationResponse {
  DocumentId: string;
  GetArchiveDocumentHash: string;
}
export interface UpdateDelingDokumentResponse extends ClientOperationResponse {}
export interface UpdateDokumentegenskaperResponse extends ClientOperationResponse {}
export interface GetConversationOperationResponse extends ClientOperationResponse {
  Items: Array<ConversationItemResponse>;
  Conversation: ConversationResponse;
}
export interface GetConversationsOperationResponse extends ClientOperationResponse {
  ConversationThreads: Array<ConversationResponse>;
  SearchWords: any;
}
export interface GetFilteredContactsOperationResponse extends ClientOperationResponse {
  FilteredContacts: Array<FilteredContact>;
}
export interface GetSpecialistAppointmentLetterOperationResponse extends ClientOperationResponse {
  Items: Array<ConversationItemResponse>;
}
export interface GetDokumentLoggOperationResponse extends ClientOperationResponse {
  DokumentDelingBrukListe: Array<DokumentDelingBruk>;
}
export interface HentBehandlerePrimarhelsetjenesteFhirOperationResult extends ClientOperationResponse {
  Behandlere: Array<TilgjengeligBehandlerPrimarhelsetjenesteResponse>;
}
export interface FerdigstilleSkjemaOperationResponse extends ClientOperationResponse {
  MessageId: string;
}
export interface GetEgenandelerOperationResponse extends ClientOperationResponse {
  Egenandeler: EgenandelerResponse;
}
export interface GetAvtaleTilhorighetOperationResponse extends ClientOperationResponse {
  AvtaleTilhorighet: AvtaleTilhorighet;
}
export interface GetInitialDataOperationResponse extends ClientOperationResponse {
  InitialData: MinHelseInitialData;
  NextReleaseLive: boolean;
}
export interface GetInnbyggersBarnOperationResponse extends ClientOperationResponse {
  Response: InnbyggersBarnContainer;
}
export interface RemoveVentelisteOperationResponse extends ClientOperationResponse {
  Response: RemoveVentelisteResponse;
}
export interface SetListeTilhorighetOperationResponse extends ClientOperationResponse {
  Response: ListeTilhorighetResponse;
}
export interface SetVentelisteOperationResponse extends ClientOperationResponse {
  Response: SetVentelisteResponse;
}
export interface DeleteMineRefleksjonerOperationResponse extends ClientOperationResponse {
  Deleted: boolean;
}
export interface GetAvtaleDetaljerOperationResponse extends ClientOperationResponse {
  AvtaleDetaljer: AvtaleDetaljer;
}
export interface GetMineRefleksjonerOperationResponse extends ClientOperationResponse {
  MineRefleksjoner: string;
}
export interface HentSkjemaoppgaveOperationResponse extends ClientOperationResponse {
  FormData: Skjema;
  FormDefinition: Skjema;
  MessageId: string;
  ExternalId: string;
  RenditionOfSchema: boolean;
  Deadline: string;
  OppgaveStatus: OppgaveStatus;
  ContactInformation: OppgaveContactInformation;
  UploadedDocumentList: Array<UploadedDocument>;
  OpprettetFraLenke: boolean;
}
export interface ClientStreamOperationResponse extends ClientOperationResponse {}
export interface ClientXmlOperationResponse extends ClientOperationResponse {
  Content: XElement;
}
export interface CreateTilgangsbegrensningOperationResponse extends ClientOperationResponse {
  Tilgangsbegrensning: Tilgangsbegrensning;
}
export interface DeleteTilgangsbegrensningOperationResponse extends ClientOperationResponse {
  Tilgangsbegrensning: Tilgangsbegrensning;
}
export interface GetTilgangsbegrensningerOperationResponse extends ClientOperationResponse {
  Tilgangsbegrensninger: Array<Tilgangsbegrensning>;
}
export interface GetPersonalInformationOperationResponse extends ClientOperationResponse {
  Information: PersonalInformation;
}
export interface SaveMineRefleksjonerOperationResponse extends ClientOperationResponse {
  Saved: boolean;
}
export interface AbortSkjemaOperationResponse extends ClientOperationResponse {
  Succeeded: boolean;
}
export interface ChangeVentelisteOperationResponse extends ClientOperationResponse {
  Response: SetVentelisteResponse;
}
export interface GetProfileOperationResponse extends ClientOperationResponse {
  Profile: CitizenProfileType;
}
export interface GetSkjemaFraKatalogOperationResponse extends ClientOperationResponse {
  FormDefinition: Skjema;
  OpprettetFraLenke: boolean;
}
export interface LagreRenditionAvSkjemaOperationResponse extends ClientOperationResponse {
  Rendition: Skjema;
}
export interface LagreSkjemaOperationResponse extends ClientOperationResponse {
  MessageId: string;
  ExternalId: string;
  FormData: Skjema;
  Version: string;
}
export interface SaveSkjemaFraKatalogOperationResponse extends ClientOperationResponse {
  ConversationId: string;
  Success: boolean;
  ExternalId: string;
  Version: string;
}
export interface SendSkjemaOperationResponse extends ClientOperationResponse {
  ConversationId: string;
  ConversationItemType: ConversationItemType;
  MessageGuids: any;
}
export interface UploadDokumentSkjemaOperationResponse extends ClientOperationResponse {
  DokumentId: string;
  GetArchiveDocumentHash: string;
  DeleteArchiveDocumentHash: string;
}
export interface GetHelsetilbudOperationResponse extends ClientOperationResponse {
  AktiveHelsetilbud: Array<Virksomhet>;
  TidligereHelsetilbud: Array<Virksomhet>;
}
export interface AvtaleSokOperationResponse extends ClientOperationResponse {
  Resultater: AvtaleSok;
}
export interface GetHelsetilbudTjenesterOperationResponse extends ClientOperationResponse {
  Behandlere: Array<TilgjengeligBehandlerResponse>;
  NewConsultationHash: string;
  NewPrescriptionHash: string;
  NewJournalAccessHash: string;
}
export interface GetAvailableAppointmentsOperationsResponse extends ClientOperationResponse {
  AvailableStatus: AvailableAppointmentsStatus;
  Events: Array<XCalProperties>;
}
export interface HentBehandlereOperationResult extends ClientOperationResponse {
  Behandlere: Array<TilgjengeligBehandlerResponse>;
}
export interface GetAppointmentDetailsOperationResponse extends ClientOperationResponse {
  Appointment: TimeavtaleResponse;
}
export interface GetTimeavtalerOperationResponse extends ClientOperationResponse {
  Appointments: Array<TimeavtaleResponse>;
}
export interface HentMotpartInfoOperationResponse extends ClientOperationResponse {
  ValidertMotpartSertifikat: boolean;
}
export interface TimeadministrasjonsstotteResponse extends ClientOperationResponse {
  CancelAppointmentHash: string;
  MessageFunction: string;
  TransportFormat: TransportFormat;
}
export interface GetKommunaleTjenesterOperationResponse extends ClientOperationResponse {
  KommunaleTjenester: Array<KommunalTjeneste>;
  TidligereKommunaleTjenester: Array<KommunalTjeneste>;
}
export interface GetAppointmentTypeOperationResponse extends ClientOperationResponse {
  AppointmentType: AppointmentType;
}
export interface GetRegisterInnsynOperationResponse extends ClientOperationResponse {
  Innsyn: Innsyn;
  Register: Register;
  Vedlegg: Array<RegisterDokument>;
}
export interface GetSYSVAKInnsynOperationResponse extends ClientOperationResponse {
  Innsyn: Innsyn;
}
export interface GetMFRInnsynOperationResponse extends ClientOperationResponse {
  Innsyn: Innsyn;
}
export interface CreateSoknadOperationResponse extends ClientOperationResponse {
  SoknadId: string;
}
export interface DeleteSoknadOperationResponse extends ClientOperationResponse {
  Success: boolean;
}
export interface GetSoknadOperationResponse extends ClientOperationResponse {
  ServiceResponse: ServiceResponse;
}
export interface GetSoknaderForPasientOperationResponse extends ClientOperationResponse {
  Metasoknader: MetasoknaderResponse;
}
export interface SaveSoknadOperationResponse extends ClientOperationResponse {
  PHATokenMismatch: boolean;
  Soknad: Soknad;
  FailedDeletedBilag: Array<FailedDeletedBilag>;
  FailedDeletedDelsoknadBilag: Array<FailedDeletedBilag>;
}
export interface SendSoknadOperationResponse extends ClientOperationResponse {
  Soknad: Soknad;
  Success: boolean;
}
export interface GetBarnAvPasientOperationResponse extends ClientOperationResponse {
  Barn: Array<Barn>;
}
export interface CopySoknadOperationResponse extends ClientOperationResponse {
  Id: string;
}
export interface SetDokumenterLestOperationResponse extends ClientOperationResponse {
  Success: boolean;
}
export interface GetPasientreiserFeaturesOperationResponse extends ClientOperationResponse {
  UtvidetSoknadEnabled: boolean;
  KlagerEnabled: boolean;
}
export interface AddBilagToSoknadOperationResponse extends ClientOperationResponse {
  Soknad: Soknad;
}
export interface DeleteBilagForKlageOperationResponse extends ClientOperationResponse {
  Klage: Klage;
}
export interface GetBilagForslagOperationResponse extends ClientOperationResponse {
  Bilag: any;
}
export interface GetBilagSoknadOperationResponse extends ClientOperationResponse {
  Bilag: string;
}
export interface SaveBilagForKlageOperationResponse extends ClientOperationResponse {
  Klage: Klage;
}
export interface GetMFRLoggOverBrukOperationResponse extends ClientOperationResponse {
  Innsyn: Innsyn;
}
export interface ValiderPostnummerOperationResponse extends ClientOperationResponse {
  Poststed: string;
  Adresse: AdresseValue;
}
export interface PasientreiserOperationResponse extends ClientOperationResponse {}
export interface SearchPersonForFullmaktOperationResponse extends ClientOperationResponse {
  Status: GetPersonForFullmaktStatus;
  Fullmaktshaver: Fullmaktshaver;
}
export interface GetFamiliemedlemmerOperationResponse extends ClientOperationResponse {
  Familiemedlemmer: Array<Familiemedlem>;
}
export interface AccessTokenExpirationOperationResponse extends ClientOperationResponse {
  Expire: ISO8601;
}
export interface GetVarseloppsettOperationResponse extends ClientOperationResponse {
  Varseloppsett: GetVarseloppsettCommandResult;
}
export interface UpdateVarseloppsettOperationResponse extends ClientOperationResponse {
  Varseloppsett: UpdateVarseloppsettCommandResult;
}
export interface GetTjenesterMedTilgangOperationResponse extends ClientOperationResponse {
  TjenesteTilgang: Array<TjenesteTilgang>;
  Samtykker: Array<Samtykke>;
  Reservasjoner: Array<Reservasjon>;
  Representasjonsforhold: RepresentasjonforholdType;
}
export interface DeleteSamtykkeHelsenorgeOperationResponse extends ClientOperationResponse {
  AktiveFullmakter: Array<AktivFullmakt>;
  BarnMedAktivtRegisterinnsynSamtykke: Array<BasisProfil>;
  Slettet: boolean;
}
export interface GetBarnMedForeldreSamtykkeInfoOperationResponse extends ClientOperationResponse {
  BarnMedForeldreSamtykkeInfo: Array<BarnMedForeldreSamtykkeInfo>;
}
export interface GetSamtykkerOperationResponse extends ClientOperationResponse {
  Samtykker: Array<Samtykke>;
}
export interface UpdateForeldreSamtykkeOperationResult extends ClientOperationResponse {}
export interface GetReservasjonerOperationResponse extends ClientOperationResponse {
  Reservasjoner: Array<Reservasjon>;
}
export interface GetReservasjonOperationResponse extends ClientOperationResponse {
  Reservasjon: Reservasjon;
}
export interface GetRepresentasjonsforholdOperationResponse extends ClientOperationResponse {
  Representasjonsforhold: Array<PersonvelgerElement>;
  HarBarnOver12: boolean;
  HarBarnOver16: boolean;
  HarBarnMedAnnenAdresse: boolean;
}
export interface GetPersonvernInnstillingerOperationResult extends ClientOperationResponse {
  PersonvernInnstillinger: Array<GeneriskPersonvernInnstilling>;
}
export interface GetHelsetjenesterLoggOperationResponse extends ClientOperationResponse {
  Historikk: Array<HelsetjenesterLogg>;
}
export interface CreateFullmaktOperationResponse extends ClientOperationResponse {
  FullmaktId: number;
}
export interface GetFullmakterOperationResponse extends ClientOperationResponse {
  Fullmakter: Array<Fullmakt>;
}
export interface GetHistoriskeFullmakterOperationResponse extends ClientOperationResponse {
  Fullmakter: Array<Fullmakt>;
}
export interface GetTjenesteOmraderOperationResponse extends ClientOperationResponse {
  TjenesteOmrader: Array<TjenesteOmrade>;
}
export interface UpdateBilagOperationResponse extends ClientOperationResponse {
  Success: boolean;
}
export interface GetBehandlingsstederOperationResponse extends ClientOperationResponse {
  Behandlingssted: AdresseValue;
}
export interface SaveBilagOperationResponse extends ClientOperationResponse {
  Soknad: Soknad;
}
export interface SearchAdresserOperationResponse extends ClientOperationResponse {
  Adresses: Array<AdresseValue>;
}
export interface AddDonorkortParorendeOperationResponse extends ClientOperationResponse {
  Id: string;
}
export interface GetDonorkortOperationResponse extends ClientOperationResponse {
  Donorkort: Donorkort;
}
export interface RemoveDonorkortParorendeOperationResponse extends ClientOperationResponse {
  Id: string;
}
export interface SendDonorkortParorendeSmsOperationResponse extends ClientOperationResponse {}
export interface UpdateDonorkortResponse extends ClientOperationResponse {}
export interface GetKJInnsynssperreOperationResponse extends ClientOperationResponse {
  Innsynssperre: Innsynssperre;
  BlokkertePersoner: Array<String>;
  InnsynssperreModuler: Array<InnsynssperreModul>;
  BlokkertBesokhist: boolean;
}
export interface UpdateKJInnsynssperreOperationResult extends ClientOperationResponse {
  Innsynssperre: Innsynssperre;
  BlokkertePersoner: Array<String>;
  InnsynssperreModuler: Array<InnsynssperreModul>;
  BlokkertBesokhist: boolean;
}
export interface DeleteKJKontaktPersonOperationResponse extends ClientOperationResponse {}
export interface GetKJKontaktPersonerOperationResponse extends ClientOperationResponse {
  Kontakter: Array<Kontakt>;
  TotaltAntall: number;
  MaksAntall: number;
}
export interface UpdateKJKontaktPersonOperationResponse extends ClientOperationResponse {}
export interface GetKommunikasjonsInnstillingerOperationResponse extends ClientOperationResponse {
  Kommunikasjon: KommunikasjonsTyper;
}
export interface UpdateKommunikasjonsInnstillingerOperationResponse extends ClientOperationResponse {}
export interface GetBesokshistorikkOperationResponse extends ClientOperationResponse {
  Besokshistorikk: Array<Besokshistorikk>;
}
export interface GetKjInnsynOperationResponse extends ClientOperationResponse {
  Innsyn: Innsyn;
}
export interface GetSistSvarteRegisterInnsynOperationResponse extends ClientOperationResponse {
  InnsynSvarMetadataEntiteter: Array<RegisterInnsynSvarMetadata>;
}
export interface GetHendelsesLoggOperationResponse extends ClientOperationResponse {
  Hendelser: Array<LoggHendelse>;
  Antall: number;
}
export interface GetHelseregisterDialogOperationResponse extends ClientOperationResponse {
  RegisterDialog: RegisterDialog;
}
export interface UpdateSykdomshistorikkOperationResponse extends ClientOperationResponse {}
export interface SearchBehandlingsstedOperationResponse extends ClientOperationResponse {
  Behandlingssteder: Array<AdresseValue>;
}
export interface GetVaksinasjonskortOperationResponse extends ClientOperationResponse {
  Vaksinasjonskort: Vaksinasjonskort;
}
export interface GetKJActivityLogOperationResponse extends ClientOperationResponse {
  AccessLog: Array<KJActivityLogType>;
}
export interface GetGeneralPractitionerOperationResponse extends ClientOperationResponse {
  FirstName: string;
  LastName: string;
  MiddleName: string;
  BusinessName: string;
  ValidTo: ISO8601;
  ValidFrom: ISO8601;
  OrganisationNumber: number;
  HerId: number;
  ParentHerId: number;
  Message: string;
  MessageEContact: string;
  MessageEConsultation: string;
  MessageAppointment: string;
  MessagePrescription: string;
  OpeningHours: any;
  OpeningHoursText: string;
  Homepage: string;
  PatientStatus: PatientStatus;
  IsDigitalActive: boolean;
  Addresses: Array<GeneralPractitionerAddress>;
  NewContactHash: string;
  NewConsultationHash: string;
  NewPrescriptionHash: string;
  NewStructuredPrescriptionHash: string;
  NewOnlineAppointmentHash: string;
  NewOfflineAppointmentHash: string;
  ServiceAccess: boolean;
  NewJournalAccessHash: string;
}
export interface GetSykdomstyperOperationResponse extends ClientOperationResponse {
  Sykdomskategorier: Array<Sykdomskategori>;
}
export interface GetSykdomshistorikkResponse extends ClientOperationResponse {
  Sykdomshistorikk: Array<History>;
  Id: string;
  Code: string;
}
export interface DeleteSykdomshistorikkResponse extends ClientOperationResponse {}
export interface UpdateNotificationProfileOperationResponse extends ClientOperationResponse {
  Success: boolean;
}
export interface GetNotificationProfileOperationResponse extends ClientOperationResponse {
  DailyNotification: boolean;
  MonthlyNotification: boolean;
}
export interface CreateReservationOperationResponse extends ClientOperationResponse {
  ReservasjonsDato: ISO8601;
  SlettesDato: ISO8601;
}
export interface GetReservationStatusOperationResponse extends ClientOperationResponse {
  ReservasjonsDato: ISO8601;
  SlettesDato: ISO8601;
  ErReservert: boolean;
  ErSlettet: boolean;
  ErAktiv: boolean;
  ErUkjent: boolean;
  VisReservasjonsblokk: boolean;
}
export interface GetHelsepersonellOperationResponse extends ClientOperationResponse {
  Helsepersonell: Performer;
}
export interface GetKritiskInformasjonOperationResponse extends ClientOperationResponse {
  HypersensitivityReactions: Array<HypersensitivityReaction>;
  AnestheticComplications: Array<AnestheticComplication>;
  CriticalMedicalConditions: Array<CriticalMedicalCondition>;
  OngoingTreatments: Array<OngoingTreatment>;
  DeviationFromGuidelines: Array<DeviationFromGuidelines>;
  Infections: Array<Infection>;
  HypersensitivityReactionsVerifiedNone: CriticalInformationVerifiedNone;
  AnestheticComplicationsVerifiedNone: CriticalInformationVerifiedNone;
  CriticalMedicalConditionsVerifiedNone: CriticalInformationVerifiedNone;
  OngoingTreatmentsVerifiedNone: CriticalInformationVerifiedNone;
  DeviationFromGuidelinesVerifiedNone: CriticalInformationVerifiedNone;
  InfectionsVerifiedNone: CriticalInformationVerifiedNone;
}
export interface LegemidlerOperationResponse extends ClientOperationResponse {
  Resepter: Array<MittLegemiddel>;
  Utleveringshistorikk: Array<MittLegemiddel>;
  LegemidlerIBruk: LegemidlerIBruk;
}
export interface GetRFLoggOverBrukOperationResponse extends ClientOperationResponse {
  ReseptLoggOverBruk: Array<ReseptLoggOverBruk>;
}
export interface GetKontaktInformationOperationResponse extends ClientOperationResponse {
  Information: GetKontaktInformationCommandResult;
}
export interface GetRegisteroppforingOperationResponse extends ClientOperationResponse {
  Registre: Array<Register>;
  IsDialogAvailable: boolean;
}
export interface GetJournalDocumentPreviewOperationResponse extends PreviewClientOperationResponse {}
export interface DeleteKlageOperationResponse extends PasientreiserOperationResponse {
  Succeeded: boolean;
}
export interface GetRFInnholdOperationResponse extends LegemidlerOperationResponse {}
export interface GetArchiveDocumentPreviewOperationResult extends PreviewClientOperationResponse {}
export interface SaveKlageOperationResponse extends PasientreiserOperationResponse {
  Klage: Klage;
}
export interface GenererMineRefleksjonerPreviewOperationResponse extends PreviewClientOperationResponse {}
export interface SendKlageOperationResponse extends PasientreiserOperationResponse {
  Klage: Klage;
}
export interface GetLegemidlerOperationResponse extends LegemidlerOperationResponse {}
export interface CreateKlageOperationResponse extends PasientreiserOperationResponse {
  Klage: Klage;
}
export interface MinHelseCommand {
  AccessToken?: string;
  ExecuteCommandFor?: ExecuteCommandFor;
  TokenScope?: TokenScope;
}
export interface SampleMinHelseCommand extends MinHelseCommand {
  Value?: string;
}
export interface SetLogOnDialogDoNotAskForConsentCommand extends MinHelseCommand {}
export interface GetFeatureToggleCommand extends MinHelseCommand {
  FeatureName?: string;
}
export interface GetFeatureTogglesCommand extends MinHelseCommand {
  Features?: Array<String>;
}
export interface GetDifiContactInformationCommand extends MinHelseCommand {}
export interface SendMessageCommand extends MinHelseCommand {
  MessageId?: string;
  ErrorHint?: ConversationType;
  ControlHash?: string;
}
export interface AbortSkjemaCommand extends MinHelseCommand {
  MessageId?: string;
  ExternalId?: string;
}
export interface FerdigstilleSkjemaCommand extends MinHelseCommand {
  ExternalId?: string;
  MessageId?: string;
  FormData?: Skjema;
  Discretion?: boolean;
}
export interface ForkastOppgaveCommand extends MinHelseCommand {
  ExternalId?: string;
  ConversationId?: string;
  ControlHash?: string;
}
export interface GetSkjemaFraKatalogCommand extends MinHelseCommand {
  Query?: string;
  ContentType?: string;
  ExternalId?: string;
  MessageId?: string;
}
export interface LogCommand extends MinHelseCommand {
  Level?: number;
  Message?: string;
  Url?: string;
  UserAgent?: string;
}
export interface GjenopprettOppgaveCommand extends MinHelseCommand {
  ExternalId?: string;
  ConversationId?: string;
  ControlHash?: string;
}
export interface LagreRenditionAvSkjemaCommand extends MinHelseCommand {
  ExternalId?: string;
  MessageId?: string;
  Content?: string;
  MimeType?: string;
  SchemaName?: string;
}
export interface LagreSkjemaCommand extends MinHelseCommand {
  ExternalId?: string;
  MessageId?: string;
  FormData?: Skjema;
}
export interface SaveSkjemaFraKatalogCommand extends MinHelseCommand {
  FormData?: Skjema;
}
export interface SendSkjemaCommand extends MinHelseCommand {
  Discretion?: boolean;
  Skjema?: Skjema;
}
export interface ToggleReminderForOppgaveCommand extends MinHelseCommand {
  ExternalId?: string;
  MessageId?: string;
  ConversationId?: string;
  ControlHash?: string;
}
export interface UploadDokumentSkjemaCommand extends MinHelseCommand {
  FileName?: string;
  ContentType?: string;
  ExternalId?: string;
  MessageId?: string;
}
export interface IsHelseNordPatientCommand extends MinHelseCommand {}
export interface IsHelseVestPatientCommand extends MinHelseCommand {}
export interface GetReferralRequestsCommand extends MinHelseCommand {
  HelseVest?: boolean;
  HelseNord?: boolean;
}
export interface ChangeAppointmentSpecialistCommand extends MinHelseCommand {
  AppointmentId?: string;
  AppointmentVersionId?: string;
  SlotStartTime?: ISO8601;
  ResourceShortName?: string;
  ControlHash?: string;
}
export interface HentSkjemaoppgaveCommand extends MinHelseCommand {
  MessageId?: string;
  ExternalId?: string;
  ContentType?: string;
}
export interface GetInnloggingsDialogInfoCommand extends MinHelseCommand {
  ForceRefresh?: boolean;
}
export interface UpdateProfileConfirmServiceCommand extends MinHelseCommand {
  TjenesteType?: number;
}
export interface GetTilesCommand extends MinHelseCommand {}
export interface AddMessageAttachmentCommand extends MinHelseCommand {
  ConversationId?: string;
  MessageId?: string;
  ContentType?: string;
  FileName?: string;
  CopyToArchive?: boolean;
}
export interface DeleteMessageAttachmentCommand extends MinHelseCommand {
  ControlHash?: string;
  DocumentId?: string;
  ConversationId?: string;
}
export interface DeleteMessagesCommand extends MinHelseCommand {
  ControlHash?: string;
  Ids?: any;
  ConversationId?: string;
  ConversationItemType?: ConversationItemType;
}
export interface GetAppointmentConversationCommand extends MinHelseCommand {
  TimeavtaleId?: string;
  ReferralRequestId?: string;
  ConversationId?: string;
  ControlHash?: string;
}
export interface GetConversationCommand extends MinHelseCommand {
  ControlHash?: string;
  ConversationId?: string;
  OriginalMessageCount?: number;
}
export interface GetSpecialistAppointmentLetterCommand extends MinHelseCommand {
  TimeavtaleId?: string;
  ReferralRequestId?: string;
  ControlHash?: string;
}
export interface UpdateReadStatusCommand extends MinHelseCommand {
  ControlHash?: string;
  MessageId?: string;
  ConversationId?: string;
  Read?: boolean;
}
export interface DeleteArchiveDocumentsCommand extends MinHelseCommand {
  ControlHash?: string;
  DocumentId?: string;
}
export interface GetArchiveDocumentCommand extends MinHelseCommand {
  ControlHash?: string;
  DownloadMode?: boolean;
  DocumentId?: string;
}
export interface GetDocumentListCommand extends MinHelseCommand {}
export interface GetDokumenterCommand extends MinHelseCommand {
  SearchText?: string;
  FraDato?: ISO8601;
  TilDato?: ISO8601;
  InnholdTyper?: any;
  KontekstTyper?: any;
  Sortering?: any;
  SorterStigende?: boolean;
  KunDelteDokumenter?: boolean;
}
export interface GetDokumentFilReferanseCommand extends MinHelseCommand {
  ControlHash?: string;
  DownloadMode?: boolean;
  DokumentId?: number;
}
export interface SaveDocumentCommand extends MinHelseCommand {
  ControlHash?: string;
  MessageId?: string;
  MimeType?: string;
  Name?: string;
  CopyToArchive?: boolean;
  Authors?: string;
}
export interface UpdateDelingDokumentCommand extends MinHelseCommand {
  DokumentId?: string;
  DelDokument?: boolean;
  DeltMedRolleId?: DeltMedRolle;
}
export interface UpdateDokumentegenskaperCommand extends MinHelseCommand {
  DokumentId?: string;
  DokumentNavn?: string;
  Emneord?: string;
}
export interface GetConversationXmlCommand extends MinHelseCommand {
  ControlHash?: string;
  ConversationId?: string;
  IncludeSensitiveContent?: boolean;
}
export interface DeleteHendelseCommand extends MinHelseCommand {
  HendelseId?: string;
  ControlHash?: string;
}
export interface GetHendelseCommand extends MinHelseCommand {
  ControlHash?: string;
  ItemId?: string;
}
export interface GetArchiveDocumentGjengivelseCommand extends MinHelseCommand {
  DownloadMode?: boolean;
  GjengivelseId?: string;
}
export interface GetArchiveDocumentPreviewCommand extends MinHelseCommand {
  ControlHash?: string;
  DocumentId?: string;
}
export interface GetEgenandelerCommand extends MinHelseCommand {
  Mock?: string;
}
export interface IsAppointmentOnlineBookableCommand extends MinHelseCommand {
  EncounterId?: string;
  ControlHash?: string;
  HealthRegion?: HealthRegion;
}
export interface GetHealthContactsCommand extends MinHelseCommand {
  RoleToPatient?: RoleToPatientType;
  Active?: boolean;
}
export interface GetXDSDokumentListeCommand extends MinHelseCommand {}
export interface GetPasientJournalRegionCommand extends MinHelseCommand {}
export interface FullmaktCommand extends MinHelseCommand {
  FullmaktshaverFnr?: string;
  FullmaktsType?: FullmaktType;
  TjenesteOmradeType?: Array<TjenesteOmradeType>;
  InnsendtDato?: ISO8601;
  SaksbehandlerId?: string;
  SaksId?: string;
  SystemType?: SystemType;
  FullmaktshaverFornavn?: string;
  FullmaktshaverMellomnavn?: string;
  FullmaktshaverEtternavn?: string;
}
export interface PasientreiserCommand extends MinHelseCommand {}
export interface BaseDialogCommand extends MinHelseCommand {
  Counterparty?: SenderOrReceiver;
}
export interface PhaAggregateCommand extends MinHelseCommand {
  SelectedConversationTypes?: any;
}
export interface XDSDokumentCommand extends MinHelseCommand {
  HomeCommunityId?: string;
  RepositoryUniqueId?: string;
  DocumentUniqueId?: string;
}
export interface JournalDocumentCommand extends MinHelseCommand {
  DocumentId?: string;
  Region?: HelseRegion;
}
export interface GetTilgangsloggBaseCommand extends MinHelseCommand {
  FraDato?: ISO8601;
  TilDato?: ISO8601;
  SideNr?: number;
  SideStr?: number;
  Region?: HelseRegion;
}
export interface BaseProfileCommand extends MinHelseCommand {}
export interface BaseBsvCommand extends MinHelseCommand {}
export interface CheckAccessTokenExpirationCommand extends MinHelseCommand {}
export interface CreateAccessTokenCommand extends MinHelseCommand {
  RedirectUri?: string;
  AuthorizationCode?: string;
  State?: string;
  CookieId?: string;
  ClientId?: string;
  ClientSecret?: string;
  SecurityLevel?: number;
}
export interface CreateOpenIdStateCommand extends MinHelseCommand {
  RedirectUri?: string;
}
export interface ExtendAccessTokenCommand extends MinHelseCommand {}
export interface GetSpRestrictedTokenDataCommand extends MinHelseCommand {
  Extend?: boolean;
}
export interface GetTokenDataCommand extends MinHelseCommand {
  Extend?: boolean;
  InnloggetExternalAccessTokens?: Array<ExternalAccessTokenRecipients>;
  RepresentertExternalAccessTokens?: Array<ExternalAccessTokenRecipients>;
}
export interface RevokeAccessTokenCommand extends MinHelseCommand {}
export interface GetTjenesterMedTilgangCommand extends MinHelseCommand {
  SjekkKunFolgendeTjenester?: any;
  InvalidateCache?: boolean;
  RefreshPersonvernData?: boolean;
}
export interface CreateLoggHendelseCommand extends MinHelseCommand {
  HendelseLoggTypeId?: number;
  HendelseTekst?: string;
  Operasjon?: string;
}
export interface GetHendelsesLoggCommand extends MinHelseCommand {
  StartDato?: ISO8601;
  InkluderEgetBruk?: boolean;
  LastFraRadIndex?: number;
}
export interface GetMinHelseRoutesCommand extends MinHelseCommand {}
export interface GetPersonalInformationCommand extends MinHelseCommand {
  IncludeChildren?: boolean;
  IncludePerson?: boolean;
  IncludeParents?: boolean;
}
export interface SetVentelisteCommand extends MinHelseCommand {
  InnbyggersFloId?: number;
  PersonIdListe?: number[];
  AvtaleId?: number;
}
export interface SetListeTilhorighetCommand extends MinHelseCommand {
  InnbyggersFloId?: number;
  AvtaleId?: number;
}
export interface RemoveVentelisteCommand extends MinHelseCommand {}
export interface GetInnbyggersBarnCommand extends MinHelseCommand {
  InnbyggersFloId?: number;
  InvalidateCache?: boolean;
}
export interface SetPasientJournalRegionCommand extends MinHelseCommand {
  Region?: HelseRegion;
}
export interface GetSlotsCommand extends MinHelseCommand {
  AppointmentId?: string;
  AppointmentVersionId?: string;
  StartDate?: string;
  EndDate?: string;
  ControlHash?: string;
}
export interface GetJournalDocumentListCommand extends MinHelseCommand {
  StartIndex?: number;
  ItemsPerPage?: number;
  Region?: HelseRegion;
}
export interface GetHelsetilbudCommand extends MinHelseCommand {}
export interface GetHelsetilbudTjenesterCommand extends MinHelseCommand {}
export interface GetHelseregisterDialogCommand extends MinHelseCommand {
  HerId?: number;
  Databehandlingsansvarlig?: string;
  RegisterId?: string;
}
export interface GetRegisterForesporselCommand extends MinHelseCommand {}
export interface SendRegisterInnsynForesporselCommand extends MinHelseCommand {
  RegisterId?: string;
  RegisterNavn?: string;
  HerId?: number;
  DialogType?: Array<RegisterDialogType>;
  ControlHash?: string;
  DialogSubTjeneste?: number;
}
export interface DownloadCalendarCommand extends MinHelseCommand {
  Token?: string;
  ExpectedDuration?: string;
  StartTime?: ISO8601;
  EndTime?: ISO8601;
  Location?: string;
  Subject?: string;
  AppointmentStatus?: AppointmentStatus;
  KalenderElementId?: number;
}
export interface GetTimeavtalerCommand extends MinHelseCommand {
  HelseVest?: boolean;
  HelseNord?: boolean;
  Fastlege?: boolean;
  Kommune?: boolean;
  NasjonalBredding?: boolean;
  CurrentTime?: ISO8601;
  Primarhelsetjeneste?: boolean;
}
export interface GetSYSVAKLoggOverBrukCommand extends MinHelseCommand {}
export interface HentMotpartInfoCommand extends MinHelseCommand {
  HerId?: number;
}
export interface DeleteKommunaleTjenesterCommand extends MinHelseCommand {}
export interface GetKommunaleTjenesterCommand extends MinHelseCommand {}
export interface SetSamtykkekonverteringInformertCommand extends MinHelseCommand {}
export interface UpdateLastLoginByCitizenCommand extends MinHelseCommand {}
export interface AvtaleSokCommand extends MinHelseCommand {
  InnbyggersFloId?: number;
  Kommuner?: Array<String>;
  Bydeler?: Array<String>;
  LegekontorNavn?: string;
  LegeNavn?: string;
}
export interface ChangeVentelisteCommand extends MinHelseCommand {
  AvtaleId?: number;
}
export interface GetAvtaleDetaljerCommand extends MinHelseCommand {
  HprNummer?: number;
  AvtaleId?: number;
  KontorId?: number;
  Fellesliste?: boolean;
  Gruppepraksis?: boolean;
  PrimarHelseTeamId?: number;
}
export interface GetAvtaleTilhorighetCommand extends MinHelseCommand {
  InnbyggersFloId?: number;
  Navaerende?: boolean;
  Historiske?: boolean;
  Fremtidige?: boolean;
}
export interface GetInitialDataCommand extends MinHelseCommand {
  InnbyggersFloId?: number;
  OmitFylker?: boolean;
  PaVenteliste?: boolean;
}
export interface GetInnbyggerCommand extends MinHelseCommand {
  InvalidateCache?: boolean;
}
export interface TimeadministrasjonsstotteCommand extends MinHelseCommand {
  Counterparty?: SenderOrReceiver;
  AppointmentId?: string;
  Status?: AppointmentStatus;
  ControlHash?: string;
  KalenderElementId?: number;
}
export interface GetSYSVAKInnsynCommand extends MinHelseCommand {}
export interface GetDokumentLoggCommand extends MinHelseCommand {
  DokumentId?: number;
}
export interface GetRegisterInnsynCommand extends MinHelseCommand {
  DokumentGuid?: any;
}
export interface GetHelsetjenesterLoggCommand extends MinHelseCommand {
  HelseTjenesterType?: HelseTjenesterType;
}
export interface GetFullmakterCommand extends MinHelseCommand {
  GetFullmaktType?: GetFullmaktType;
  SaksbehandlerId?: string;
  SaksId?: string;
  SystemType?: SystemType;
}
export interface GetHistoriskeFullmakterCommand extends MinHelseCommand {
  GetFullmaktType?: GetFullmaktType;
}
export interface GetTjenesteOmraderCommand extends MinHelseCommand {}
export interface DeleteSoknadCommand extends MinHelseCommand {
  SaksdokumentId?: string;
}
export interface GetSoknadCommand extends MinHelseCommand {
  Id?: string;
}
export interface GetSoknaderForPasientCommand extends MinHelseCommand {
  Limit?: string;
  StartIndex?: string;
}
export interface SetDokumenterLestCommand extends MinHelseCommand {
  SoknadsId?: string;
}
export interface GetPasientreiserFeaturesCommand extends MinHelseCommand {}
export interface GetPersonvernInnstillingDefinisjonFullstendigTekstCommand extends MinHelseCommand {
  PersonvernInnstillingDefinisjonGuid?: any;
  DownloadMode?: boolean;
}
export interface GetBilagCommand extends MinHelseCommand {
  Id?: string;
  ControlHash?: string;
}
export interface GetGeneralPractitionerCommand extends MinHelseCommand {}
export interface GetHelsepersonellCommand extends MinHelseCommand {
  HprId?: string;
}
export interface GetKontaktInformationCommand extends MinHelseCommand {}
export interface GetRegisteroppforingCommand extends MinHelseCommand {
  OppforingsTyper?: Array<OppforingsType>;
  RegisterIds?: any;
}
export interface GetLegemidlerCommand extends MinHelseCommand {}
export interface GetRFInnholdCommand extends MinHelseCommand {}
export interface GetRFLoggOverBrukCommand extends MinHelseCommand {}
export interface CreateReservationCommand extends MinHelseCommand {}
export interface GetReservationStatusCommand extends MinHelseCommand {}
export interface GetSistSvarteRegisterInnsynCommand extends MinHelseCommand {
  DialogTyper?: Array<RegisterDialogType>;
  RegisterId?: string;
}
export interface PersonverninnstillingGeneriskvisningCommand extends MinHelseCommand {}
export interface GetRequiredSamtykkeLevelCommand extends MinHelseCommand {}
export interface GetProfilIdCommand extends MinHelseCommand {
  CreateIfNotExists?: boolean;
}
export interface GetXDSSaml2TokenCommand extends MinHelseCommand {}
export interface GetVarseloppsettCommand extends MinHelseCommand {}
export interface UpdateVarseloppsettCommand extends MinHelseCommand {
  VarselEpost?: boolean;
  VarselSms?: boolean;
  Varslingsniva?: NotificationLevel;
  Representasjonsvarsler?: Array<Representasjonsvarsel>;
}
export interface CreateTilgangsbegrensningCommand extends MinHelseCommand {
  PersonvernInnstillingDefinisjonGuid?: any;
  TidsbegrensetTil?: ISO8601;
  Nummer?: string;
  Navn?: string;
  DataType?: TilgangsbegrensningDataType;
}
export interface DeleteTilgangsbegrensningCommand extends MinHelseCommand {
  PersonvernInnstillingDefinisjonGuid?: any;
  Nummer?: string;
  Navn?: string;
  DataType?: TilgangsbegrensningDataType;
}
export interface GetTilgangsbegrensningerCommand extends MinHelseCommand {
  PersonvernInnstillingDefinisjoner?: any;
}
export interface GetFamiliemedlemmerCommand extends MinHelseCommand {}
export interface SearchPersonForFullmaktCommand extends MinHelseCommand {
  FullmaktshaverFnr?: string;
  FullmaktshaverEtternavn?: string;
}
export interface CreateSamtykkeHelsenorgeCommand extends MinHelseCommand {}
export interface DeleteSamtykkeHelsenorgeCommand extends MinHelseCommand {}
export interface GetBarnMedForeldreSamtykkeInfoCommand extends MinHelseCommand {}
export interface GetSamtykkerCommand extends MinHelseCommand {
  SaksbehandlerId?: string;
  SaksId?: string;
  SystemType?: SystemType;
}
export interface SetSamtykkeLevelCommand extends MinHelseCommand {
  SamtykkeLevel?: SamtykkeLevel;
}
export interface UpdateForeldreSamtykkeCommand extends MinHelseCommand {
  ProfilGuid?: any;
  SamtykkeStatusType?: SamtykkeStatusType;
}
export interface UpdateSamtykkeCommand extends MinHelseCommand {
  PersonvernInnstillingDefinisjonGuid?: any;
  StatusKodeType?: StatusKodeType;
}
export interface GetReservasjonCommand extends MinHelseCommand {
  ReservasjonDefinisjonGuid?: any;
}
export interface GetReservasjonerCommand extends MinHelseCommand {
  HelseTjenesterType?: HelseTjenesterType;
}
export interface UpdateReservasjonCommand extends MinHelseCommand {
  PersonvernInnstillingDefinisjonGuid?: any;
  SaksbehandlerId?: string;
  SaksId?: string;
  SystemType?: SystemType;
  StatusKodeType?: StatusKodeType;
  Signature?: PersonvernSignature;
}
export interface GetDigitaltAktivBrukerCommand extends MinHelseCommand {
  RequestFnr?: string;
  TilgangTilTjenesteType?: number;
}
export interface GetRepresentasjonsforholdCommand extends MinHelseCommand {
  Invalidate?: boolean;
  FetchUnreadMessages?: boolean;
}
export interface SetRepresentasjonsforholdCommand extends MinHelseCommand {
  Fnr?: string;
}
export interface UndoReservationCommand extends MinHelseCommand {
  ReservationType?: KjernejournalReservationType;
}
export interface GetNotificationProfileCommand extends MinHelseCommand {}
export interface GetVaksinasjonskortCommand extends MinHelseCommand {}
export interface DeleteKJKontaktPersonCommand extends MinHelseCommand {
  Kontakt?: Kontakt;
}
export interface CreateKJInternetsperreCommand extends MinHelseCommand {}
export interface UpdateDonorkortCommand extends MinHelseCommand {
  Operation?: DonorkortOperation;
}
export interface UpdateSykdomshistorikkCommand extends MinHelseCommand {
  Sykdomshistorikk?: Array<History>;
}
export interface GetCommunicationPreferencesCommand extends MinHelseCommand {}
export interface UpdateKJKontaktPersonCommand extends MinHelseCommand {
  Kontakt?: Kontakt;
}
export interface GetKJKontaktPersonerCommand extends MinHelseCommand {
  KontaktKategorier?: any;
}
export interface GetKJInnsynssperreCommand extends MinHelseCommand {}
export interface SendDonorkortParorendeSmsCommand extends MinHelseCommand {
  TelefonNummer?: string;
  ParorendeNavn?: string;
}
export interface UpdateNotificationProfileCommand extends MinHelseCommand {
  DailyNotification?: boolean;
  MonthlyNotification?: boolean;
}
export interface GetDonorkortCommand extends MinHelseCommand {}
export interface DeleteSykdomshistorikkCommand extends MinHelseCommand {
  Sykdomshistorikk?: History;
}
export interface GetSykdomshistorikkCommand extends MinHelseCommand {}
export interface AddDonorkortParorendeCommand extends MinHelseCommand {
  Id?: string;
}
export interface GetSykdomstyperCommand extends MinHelseCommand {}
export interface RemoveDonorkortParorendeCommand extends MinHelseCommand {
  Id?: string;
}
export interface UpdateKommunikasjonsInnstillingerCommand extends MinHelseCommand {
  Kommunikasjon?: KommunikasjonsTyper;
}
export interface GetKommunikasjonsInnstillingerCommand extends MinHelseCommand {}
export interface UpdateHistoryCommand extends MinHelseCommand {
  Sykdomshistorikk?: Array<History>;
  Id?: string;
  Code?: string;
}
export interface GetMFRLoggOverBrukCommand extends MinHelseCommand {}
export interface GetBesokshistorikkCommand extends MinHelseCommand {}
export interface GetKJActivityLogCommand extends MinHelseCommand {}
export interface GetMFRInnsynCommand extends MinHelseCommand {}
export interface GetKritiskInformasjonCommand extends MinHelseCommand {
  KunAktive?: boolean;
}
export interface RapporterMerknadPaFeilIBesokshistorikkCommand extends MinHelseCommand {}
export interface GetKjInnsynCommand extends MinHelseCommand {}
export interface UpdateKJInnsynssperreCommand extends MinHelseCommand {
  InnsynssperreType?: InnsynssperreType;
  InnsynssperreModuler?: Array<InnsynssperreModul>;
}
export interface UpdateKJBesokhistBlokkeringCommand extends MinHelseCommand {
  Blokker?: boolean;
}
export interface GetProfileCommand extends BaseProfileCommand {
  CreateIfNotExists?: boolean;
  IgnoreCache?: boolean;
  UpdateLogOnDate?: boolean;
}
export interface SaveKlageCommand extends PasientreiserCommand {
  Id?: number;
  Beskrivelse?: string;
  ControlHash?: string;
  BilagTilGodkjenning?: BilagTilGodkjenning;
}
export interface SendKlageCommand extends PasientreiserCommand {
  Id?: number;
  ControlHash?: string;
}
export interface CopySoknadCommand extends PasientreiserCommand {
  Id?: string;
  Info?: string;
}
export interface GetAppointmentDetailsCommand extends BaseDialogCommand {
  DetailsId?: string;
  AppointmentType?: TimeavtaleType;
  HealthRegion?: HealthRegion;
}
export interface GetBarnAvPasientCommand extends PasientreiserCommand {}
export interface GetProfilegenskaperCommand extends BaseProfileCommand {
  CategoryType?: ProfilePropertyCategoryType;
  InvalidateCache?: boolean;
}
export interface HasChangedSocialSecurityNumberCommand extends BaseProfileCommand {
  InvalidateCache?: boolean;
}
export interface UpdateProfileCommand extends BaseProfileCommand {
  Profile?: CitizenProfileType;
}
export interface CreateKlageCommand extends PasientreiserCommand {
  Saksnummer?: number;
  VedtakId?: string;
  SaksMappeId?: string;
  Beskrivelse?: string;
  ControlHash?: string;
}
export interface UpdateNyttFnrEgenskapCommand extends BaseProfileCommand {}
export interface UserGeneratedRootMessageCommand extends BaseDialogCommand {
  Subject?: string;
  Body?: string;
  Attachments?: Array<MessageAttachment>;
  CopyAttachmentsToArchive?: boolean;
  AutoSend?: boolean;
}
export interface GetVarselmenyElementerCommand extends PhaAggregateCommand {}
export interface SaveMineRefleksjonerCommand extends BaseBsvCommand {
  Content?: string;
  LcidLanguage?: number;
}
export interface GetMineRefleksjonerCommand extends BaseBsvCommand {
  RefleksjonerId?: string;
}
export interface DeleteFullmaktCommand extends FullmaktCommand {
  ControlHash?: string;
  FullmaktId?: number;
  Signature?: PersonvernSignature;
  GetFullmaktType?: GetFullmaktType;
}
export interface CreateFullmaktCommand extends FullmaktCommand {
  GyldigTil?: ISO8601;
  Signature?: PersonvernSignature;
}
export interface GenererMineRefleksjonerPreviewCommand extends BaseBsvCommand {
  RefleksjonerId?: string;
  Behandlingsvalg?: string;
  LcidLanguage?: number;
  Notater?: boolean;
  Nedlastningsmodus?: boolean;
}
export interface GetHendelserCommand extends PhaAggregateCommand {
  ItemsPerPage?: number;
  PageNumber?: number;
}
export interface GenererMineRefleksjonerPdfCommand extends BaseBsvCommand {
  RefleksjonerId?: string;
  Behandlingsvalg?: string;
  LcidLanguage?: number;
  Notater?: boolean;
  Nedlastningsmodus?: boolean;
}
export interface DeleteKlageCommand extends PasientreiserCommand {
  Id?: number;
  ControlHash?: string;
}
export interface DeleteMineRefleksjonerCommand extends BaseBsvCommand {
  RefleksjonerId?: string;
}
export interface ValiderPostnummerCommand extends PasientreiserCommand {
  Postnummer?: string;
}
export interface SendSoknadCommand extends PasientreiserCommand {
  ApplicationId?: string;
  UpdatedAt?: string;
}
export interface CreateExternalLoggHendelseCommand extends CreateLoggHendelseCommand {
  InnloggetBrukerProfilId?: number;
  RepresentertProfilId?: number;
}
export interface GetUnreadMessagesCountCommand extends PhaAggregateCommand {}
export interface HentBehandlereCommand extends BaseDialogCommand {}
export interface GetAvailableAppointmentsCommand extends BaseDialogCommand {
  FromDate?: ISO8601;
  ToDate?: ISO8601;
  FunksjonellMotpart?: FunksjonellMotpart;
}
export interface GetAppointmentTypeCommand extends BaseDialogCommand {
  ConversationId?: string;
}
export interface SearchAdresserCommand extends PasientreiserCommand {
  Query?: string;
  SearchType?: string;
  Limit?: string;
}
export interface SearchBehandlingsstedCommand extends PasientreiserCommand {
  NameQuery?: string;
  Fylke?: string;
  Limit?: string;
}
export interface GetBehandlingsstederCommand extends PasientreiserCommand {
  OrgNr?: number;
  IncludeChildren?: boolean;
}
export interface UpdateBilagCommand extends PasientreiserCommand {
  Id?: string;
  Bilagskode?: string;
}
export interface SaveBilagForKlageCommand extends PasientreiserCommand {
  FileName?: string;
  Bilagskode?: string;
  PHASaksMappeId?: string;
  PHASaksDokumentId?: number;
  ContentType?: string;
}
export interface SaveBilagCommand extends PasientreiserCommand {
  FileName?: string;
  Bilagskode?: string;
  PHASaksMappeId?: string;
  PHASaksDokumentId?: string;
  GjelderFor?: string;
  Delsoknad?: string;
  ContentType?: string;
  UpdatedAt?: string;
}
export interface SaveSoknadCommand extends PasientreiserCommand {
  SoknadString?: string;
  Soknad?: Soknad;
}
export interface GetBilagForslagCommand extends PasientreiserCommand {
  Bilagskoder?: any;
}
export interface GetBilagSoknadCommand extends PasientreiserCommand {
  Id?: string;
  ControlHash?: string;
}
export interface CreateSoknadCommand extends PasientreiserCommand {
  SoknadType?: string;
  SokerType?: string;
  PasientId?: string;
  Maalform?: string;
}
export interface GetTilgangsloggAnsattInnsynCommand extends GetTilgangsloggBaseCommand {
  AnsattId?: string;
  AnsattIdType?: string;
  AnsattStilling?: string;
  RepositoryId?: string;
}
export interface ConversationsQueryCommand extends PhaAggregateCommand {
  CounterpartyTypes?: any;
  StartTime?: ISO8601;
  EndTime?: ISO8601;
  ShowUnread?: boolean;
  ShowWithAttachment?: boolean;
  ShowDraft?: boolean;
  OppgaveCriteria?: any;
  FilteredContacts?: Array<FilteredContact>;
  SearchString?: string;
}
export interface DownloadXDSDokumentCommand extends XDSDokumentCommand {}
export interface SaveJournalDocumentCommand extends JournalDocumentCommand {}
export interface GetJournalDocumentPreviewCommand extends JournalDocumentCommand {}
export interface GetJournalDocumentCommand extends JournalDocumentCommand {}
export interface DownloadJournalDocumentCommand extends JournalDocumentCommand {}
export interface DeleteBilagForKlageCommand extends PasientreiserCommand {
  PHASaksDokumentId?: number;
  BilagId?: string;
  ControlHash?: string;
}
export interface GetXDSDokumentPreviewCommand extends XDSDokumentCommand {}
export interface GetXDSDokumentCommand extends XDSDokumentCommand {}
export interface SaveXDSDokumentCommand extends XDSDokumentCommand {}
export interface GetTilgangsloggInnsynCommand extends GetTilgangsloggBaseCommand {}
export interface AddBilagToSoknadCommand extends PasientreiserCommand {
  PHASaksMappeId?: string;
  PHASaksDokumentId?: string;
  GjelderFor?: string;
  GjelderForReisevei?: string;
  Delsoknad?: string;
  BilagsIds?: any;
  UpdatedAt?: string;
}
export interface UserGeneratedMessageCommand extends UserGeneratedRootMessageCommand {
  ConversationId?: string;
  ParentId?: string;
  MessageId?: string;
  ControlHash?: string;
  IsUpload?: boolean;
}
export interface GetConversationsCommand extends ConversationsQueryCommand {
  ItemsPerPage?: number;
  OrderBy?: any;
  PageNumber?: number;
}
export interface GetConversationsCountCommand extends ConversationsQueryCommand {}
export interface UpdateFullmaktCommand extends CreateFullmaktCommand {
  FullmaktId?: number;
  FullmaktshaverFnr?: string;
  FullmaktshaverEtternavn?: string;
  ControlHash?: string;
}
export interface GetFilteredConversationsCommand extends ConversationsQueryCommand {
  ItemsPerPage?: number;
  OrderBy?: any;
  PageNumber?: number;
}
export interface GetFilteredContactsCommand extends ConversationsQueryCommand {}
export interface RapporterFeilIBesokshistorikkCommand extends UserGeneratedMessageCommand {
  Besokshistorikk?: Besokshistorikk;
  AntallBesok?: RapporterFeil;
  Arstall?: RapporterFeil;
  Fagenhet?: RapporterFeil;
  Institusjon?: RapporterFeil;
  HeleBesoket?: RapporterFeil;
  AkseptererOppslagMotKjernejournal?: boolean;
  LocalizationDictionary?: any;
  ReshId?: RapporterFeil;
  EpisodeIdList?: RapporterFeil;
  Organisasjonsnummer?: RapporterFeil;
  RhfOrganisasjonsnummer?: RapporterFeil;
  HfOrganisasjonsnummer?: RapporterFeil;
}
export interface BaseEncounterCommand extends UserGeneratedMessageCommand {
  Calendar?: XCalProperties;
  CareLevel?: string;
}
export interface AppointmentCommand extends UserGeneratedMessageCommand {
  Calendar?: XCalProperties;
  OfficeName?: string;
  OfficeAddress?: string;
  Sakstype?: string;
  TimeavtaleType?: TimeavtaleType;
  FunksjonellMotpart?: FunksjonellMotpart;
}
export interface NewCoordinatorMessageCommand extends UserGeneratedMessageCommand {
  CoordinatorType?: CoordinatorType;
  Coordinator?: Person;
}
export interface NewHelsefagligKontaktMessageCommand extends UserGeneratedMessageCommand {
  HelsefagligKontakt?: Person;
}
export interface RegisterDialogBaseCommand extends UserGeneratedMessageCommand {
  RegisterId?: string;
  RegisterNavn?: string;
}
export interface NewJournalAccessCommand extends UserGeneratedMessageCommand {}
export interface NewContactCommand extends UserGeneratedMessageCommand {
  Sakstype?: string;
  MeldingType?: string;
}
export interface NewPrescriptionCommand extends UserGeneratedMessageCommand {
  DeliveryMethod?: PrescriptionDeliveryMethod;
  Items?: Array<String>;
  FunksjonellMotpart?: FunksjonellMotpart;
  FunksjonellOrgMotpart?: SenderOrReceiverOrganization;
}
export interface NewConsultationCommand extends UserGeneratedMessageCommand {
  ForwardedConversationId?: string;
  FunksjonellMotpart?: FunksjonellMotpart;
  FunksjonellOrgMotpart?: SenderOrReceiverOrganization;
}
export interface ChangeAppointmentCommand extends AppointmentCommand {}
export interface NewOfflineAppointmentCommand extends AppointmentCommand {}
export interface NewPrimarhelsetjenesteAppointmentCommand extends AppointmentCommand {}
export interface NewOnlineAppointmentCommand extends AppointmentCommand {}
export interface AdditionalEncounterInfoCommand extends BaseEncounterCommand {}
export interface CancelEncounterCommand extends BaseEncounterCommand {}
export interface CancelAppointmentPrimarhelsetjenesteCommand extends AppointmentCommand {
  MessageFunction?: string;
  TransportFormat?: TransportFormat;
  KalenderElementId?: number;
}
export interface ChangeEncounterCommand extends BaseEncounterCommand {
  FunctionalCounterparty?: SenderOrReceiverOrganization;
}
export interface RegisterMeldeFeilCommand extends RegisterDialogBaseCommand {}
export interface RegisterInnsynUtleveringCommand extends RegisterDialogBaseCommand {}
export interface RegisterInnsynOpplysningerCommand extends RegisterDialogBaseCommand {}
export interface ConfirmEncounterCommand extends BaseEncounterCommand {}
export interface NewHelseregisterMessageCommand extends RegisterDialogBaseCommand {}
export interface CancelAppointmentCommand extends AppointmentCommand {
  AndreTjenester?: Array<AndreTjenester>;
  FunksjoneltMotpart?: Person;
}
export interface NewStructuredPrescriptionCommand extends NewPrescriptionCommand {
  Prescriptions?: Array<ReseptHeader>;
  PrescriptionIds?: Array<String>;
}
// ReSharper restore RedundantEmptyConstructor
// ReSharper restore InconsistentNaming
/* tslint:enable */
